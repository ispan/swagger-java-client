/*
 * dkPlus.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.DkCloudDataModelTimeClockEntryTypeModel;
import java.io.IOException;
import java.util.UUID;
import org.threeten.bp.OffsetDateTime;

/**
 * DkCloudDataModelTimeClockChildEntryModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-12T12:57:09.866Z")



public class DkCloudDataModelTimeClockChildEntryModel {
  @SerializedName("ID")
  private UUID ID = null;

  @SerializedName("Start")
  private OffsetDateTime start = null;

  @SerializedName("End")
  private OffsetDateTime end = null;

  @SerializedName("ActualStart")
  private OffsetDateTime actualStart = null;

  @SerializedName("ActualEnd")
  private OffsetDateTime actualEnd = null;

  @SerializedName("Project")
  private String project = null;

  @SerializedName("Phase")
  private String phase = null;

  @SerializedName("Task")
  private String task = null;

  @SerializedName("Dim1")
  private String dim1 = null;

  @SerializedName("Dim2")
  private String dim2 = null;

  @SerializedName("Dim3")
  private String dim3 = null;

  @SerializedName("Text")
  private String text = null;

  @SerializedName("Processed")
  private Boolean processed = null;

  @SerializedName("ProcessedJournal")
  private Boolean processedJournal = null;

  @SerializedName("EntryType")
  private DkCloudDataModelTimeClockEntryTypeModel entryType = null;

  @SerializedName("TotalHours")
  private Double totalHours = null;

  @SerializedName("RoundedTotalHours")
  private Double roundedTotalHours = null;

  @SerializedName("ActualTotalHours")
  private Double actualTotalHours = null;

  @SerializedName("RoundedActualTotalHours")
  private Double roundedActualTotalHours = null;

  @SerializedName("TotalMinutes")
  private Double totalMinutes = null;

  @SerializedName("RoundedTotalMinutes")
  private Double roundedTotalMinutes = null;

  @SerializedName("ActualTotalMinutes")
  private Double actualTotalMinutes = null;

  @SerializedName("ActualRoundedTotalMinutes")
  private Double actualRoundedTotalMinutes = null;

  public DkCloudDataModelTimeClockChildEntryModel ID(UUID ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @ApiModelProperty(example = "00000000-0000-0000-0000-000000000000", value = "")
  public UUID getID() {
    return ID;
  }

  public void setID(UUID ID) {
    this.ID = ID;
  }

  public DkCloudDataModelTimeClockChildEntryModel start(OffsetDateTime start) {
    this.start = start;
    return this;
  }

   /**
   * Get start
   * @return start
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getStart() {
    return start;
  }

  public void setStart(OffsetDateTime start) {
    this.start = start;
  }

  public DkCloudDataModelTimeClockChildEntryModel end(OffsetDateTime end) {
    this.end = end;
    return this;
  }

   /**
   * Get end
   * @return end
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEnd() {
    return end;
  }

  public void setEnd(OffsetDateTime end) {
    this.end = end;
  }

  public DkCloudDataModelTimeClockChildEntryModel actualStart(OffsetDateTime actualStart) {
    this.actualStart = actualStart;
    return this;
  }

   /**
   * Get actualStart
   * @return actualStart
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getActualStart() {
    return actualStart;
  }

  public void setActualStart(OffsetDateTime actualStart) {
    this.actualStart = actualStart;
  }

  public DkCloudDataModelTimeClockChildEntryModel actualEnd(OffsetDateTime actualEnd) {
    this.actualEnd = actualEnd;
    return this;
  }

   /**
   * Get actualEnd
   * @return actualEnd
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getActualEnd() {
    return actualEnd;
  }

  public void setActualEnd(OffsetDateTime actualEnd) {
    this.actualEnd = actualEnd;
  }

  public DkCloudDataModelTimeClockChildEntryModel project(String project) {
    this.project = project;
    return this;
  }

   /**
   * Get project
   * @return project
  **/
  @ApiModelProperty(value = "")
  public String getProject() {
    return project;
  }

  public void setProject(String project) {
    this.project = project;
  }

  public DkCloudDataModelTimeClockChildEntryModel phase(String phase) {
    this.phase = phase;
    return this;
  }

   /**
   * Get phase
   * @return phase
  **/
  @ApiModelProperty(value = "")
  public String getPhase() {
    return phase;
  }

  public void setPhase(String phase) {
    this.phase = phase;
  }

  public DkCloudDataModelTimeClockChildEntryModel task(String task) {
    this.task = task;
    return this;
  }

   /**
   * Get task
   * @return task
  **/
  @ApiModelProperty(value = "")
  public String getTask() {
    return task;
  }

  public void setTask(String task) {
    this.task = task;
  }

  public DkCloudDataModelTimeClockChildEntryModel dim1(String dim1) {
    this.dim1 = dim1;
    return this;
  }

   /**
   * Get dim1
   * @return dim1
  **/
  @ApiModelProperty(value = "")
  public String getDim1() {
    return dim1;
  }

  public void setDim1(String dim1) {
    this.dim1 = dim1;
  }

  public DkCloudDataModelTimeClockChildEntryModel dim2(String dim2) {
    this.dim2 = dim2;
    return this;
  }

   /**
   * Get dim2
   * @return dim2
  **/
  @ApiModelProperty(value = "")
  public String getDim2() {
    return dim2;
  }

  public void setDim2(String dim2) {
    this.dim2 = dim2;
  }

  public DkCloudDataModelTimeClockChildEntryModel dim3(String dim3) {
    this.dim3 = dim3;
    return this;
  }

   /**
   * Get dim3
   * @return dim3
  **/
  @ApiModelProperty(value = "")
  public String getDim3() {
    return dim3;
  }

  public void setDim3(String dim3) {
    this.dim3 = dim3;
  }

  public DkCloudDataModelTimeClockChildEntryModel text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public DkCloudDataModelTimeClockChildEntryModel processed(Boolean processed) {
    this.processed = processed;
    return this;
  }

   /**
   * Get processed
   * @return processed
  **/
  @ApiModelProperty(value = "")
  public Boolean isProcessed() {
    return processed;
  }

  public void setProcessed(Boolean processed) {
    this.processed = processed;
  }

  public DkCloudDataModelTimeClockChildEntryModel processedJournal(Boolean processedJournal) {
    this.processedJournal = processedJournal;
    return this;
  }

   /**
   * Get processedJournal
   * @return processedJournal
  **/
  @ApiModelProperty(value = "")
  public Boolean isProcessedJournal() {
    return processedJournal;
  }

  public void setProcessedJournal(Boolean processedJournal) {
    this.processedJournal = processedJournal;
  }

  public DkCloudDataModelTimeClockChildEntryModel entryType(DkCloudDataModelTimeClockEntryTypeModel entryType) {
    this.entryType = entryType;
    return this;
  }

   /**
   * Get entryType
   * @return entryType
  **/
  @ApiModelProperty(value = "")
  public DkCloudDataModelTimeClockEntryTypeModel getEntryType() {
    return entryType;
  }

  public void setEntryType(DkCloudDataModelTimeClockEntryTypeModel entryType) {
    this.entryType = entryType;
  }

   /**
   * Get totalHours
   * @return totalHours
  **/
  @ApiModelProperty(value = "")
  public Double getTotalHours() {
    return totalHours;
  }

   /**
   * Get roundedTotalHours
   * @return roundedTotalHours
  **/
  @ApiModelProperty(value = "")
  public Double getRoundedTotalHours() {
    return roundedTotalHours;
  }

   /**
   * Get actualTotalHours
   * @return actualTotalHours
  **/
  @ApiModelProperty(value = "")
  public Double getActualTotalHours() {
    return actualTotalHours;
  }

   /**
   * Get roundedActualTotalHours
   * @return roundedActualTotalHours
  **/
  @ApiModelProperty(value = "")
  public Double getRoundedActualTotalHours() {
    return roundedActualTotalHours;
  }

   /**
   * Get totalMinutes
   * @return totalMinutes
  **/
  @ApiModelProperty(value = "")
  public Double getTotalMinutes() {
    return totalMinutes;
  }

   /**
   * Get roundedTotalMinutes
   * @return roundedTotalMinutes
  **/
  @ApiModelProperty(value = "")
  public Double getRoundedTotalMinutes() {
    return roundedTotalMinutes;
  }

   /**
   * Get actualTotalMinutes
   * @return actualTotalMinutes
  **/
  @ApiModelProperty(value = "")
  public Double getActualTotalMinutes() {
    return actualTotalMinutes;
  }

   /**
   * Get actualRoundedTotalMinutes
   * @return actualRoundedTotalMinutes
  **/
  @ApiModelProperty(value = "")
  public Double getActualRoundedTotalMinutes() {
    return actualRoundedTotalMinutes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DkCloudDataModelTimeClockChildEntryModel dkCloudDataModelTimeClockChildEntryModel = (DkCloudDataModelTimeClockChildEntryModel) o;
    return Objects.equals(this.ID, dkCloudDataModelTimeClockChildEntryModel.ID) &&
        Objects.equals(this.start, dkCloudDataModelTimeClockChildEntryModel.start) &&
        Objects.equals(this.end, dkCloudDataModelTimeClockChildEntryModel.end) &&
        Objects.equals(this.actualStart, dkCloudDataModelTimeClockChildEntryModel.actualStart) &&
        Objects.equals(this.actualEnd, dkCloudDataModelTimeClockChildEntryModel.actualEnd) &&
        Objects.equals(this.project, dkCloudDataModelTimeClockChildEntryModel.project) &&
        Objects.equals(this.phase, dkCloudDataModelTimeClockChildEntryModel.phase) &&
        Objects.equals(this.task, dkCloudDataModelTimeClockChildEntryModel.task) &&
        Objects.equals(this.dim1, dkCloudDataModelTimeClockChildEntryModel.dim1) &&
        Objects.equals(this.dim2, dkCloudDataModelTimeClockChildEntryModel.dim2) &&
        Objects.equals(this.dim3, dkCloudDataModelTimeClockChildEntryModel.dim3) &&
        Objects.equals(this.text, dkCloudDataModelTimeClockChildEntryModel.text) &&
        Objects.equals(this.processed, dkCloudDataModelTimeClockChildEntryModel.processed) &&
        Objects.equals(this.processedJournal, dkCloudDataModelTimeClockChildEntryModel.processedJournal) &&
        Objects.equals(this.entryType, dkCloudDataModelTimeClockChildEntryModel.entryType) &&
        Objects.equals(this.totalHours, dkCloudDataModelTimeClockChildEntryModel.totalHours) &&
        Objects.equals(this.roundedTotalHours, dkCloudDataModelTimeClockChildEntryModel.roundedTotalHours) &&
        Objects.equals(this.actualTotalHours, dkCloudDataModelTimeClockChildEntryModel.actualTotalHours) &&
        Objects.equals(this.roundedActualTotalHours, dkCloudDataModelTimeClockChildEntryModel.roundedActualTotalHours) &&
        Objects.equals(this.totalMinutes, dkCloudDataModelTimeClockChildEntryModel.totalMinutes) &&
        Objects.equals(this.roundedTotalMinutes, dkCloudDataModelTimeClockChildEntryModel.roundedTotalMinutes) &&
        Objects.equals(this.actualTotalMinutes, dkCloudDataModelTimeClockChildEntryModel.actualTotalMinutes) &&
        Objects.equals(this.actualRoundedTotalMinutes, dkCloudDataModelTimeClockChildEntryModel.actualRoundedTotalMinutes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ID, start, end, actualStart, actualEnd, project, phase, task, dim1, dim2, dim3, text, processed, processedJournal, entryType, totalHours, roundedTotalHours, actualTotalHours, roundedActualTotalHours, totalMinutes, roundedTotalMinutes, actualTotalMinutes, actualRoundedTotalMinutes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DkCloudDataModelTimeClockChildEntryModel {\n");
    
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    end: ").append(toIndentedString(end)).append("\n");
    sb.append("    actualStart: ").append(toIndentedString(actualStart)).append("\n");
    sb.append("    actualEnd: ").append(toIndentedString(actualEnd)).append("\n");
    sb.append("    project: ").append(toIndentedString(project)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    task: ").append(toIndentedString(task)).append("\n");
    sb.append("    dim1: ").append(toIndentedString(dim1)).append("\n");
    sb.append("    dim2: ").append(toIndentedString(dim2)).append("\n");
    sb.append("    dim3: ").append(toIndentedString(dim3)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    processed: ").append(toIndentedString(processed)).append("\n");
    sb.append("    processedJournal: ").append(toIndentedString(processedJournal)).append("\n");
    sb.append("    entryType: ").append(toIndentedString(entryType)).append("\n");
    sb.append("    totalHours: ").append(toIndentedString(totalHours)).append("\n");
    sb.append("    roundedTotalHours: ").append(toIndentedString(roundedTotalHours)).append("\n");
    sb.append("    actualTotalHours: ").append(toIndentedString(actualTotalHours)).append("\n");
    sb.append("    roundedActualTotalHours: ").append(toIndentedString(roundedActualTotalHours)).append("\n");
    sb.append("    totalMinutes: ").append(toIndentedString(totalMinutes)).append("\n");
    sb.append("    roundedTotalMinutes: ").append(toIndentedString(roundedTotalMinutes)).append("\n");
    sb.append("    actualTotalMinutes: ").append(toIndentedString(actualTotalMinutes)).append("\n");
    sb.append("    actualRoundedTotalMinutes: ").append(toIndentedString(actualRoundedTotalMinutes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


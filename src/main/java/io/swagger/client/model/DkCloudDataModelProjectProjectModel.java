/*
 * dkPlus.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.DkCloudDataModelProjectProjectPhaseLinkModel;
import io.swagger.client.model.DkCloudDataModelProjectProjectTaskLinkModel;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * DkCloudDataModelProjectProjectModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-12T12:57:09.866Z")



public class DkCloudDataModelProjectProjectModel {
  @SerializedName("Number")
  private String number = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Group")
  private String group = null;

  @SerializedName("MasterJobNumber")
  private String masterJobNumber = null;

  @SerializedName("QuotationNumber")
  private Integer quotationNumber = null;

  @SerializedName("CustomerToBill")
  private String customerToBill = null;

  @SerializedName("CustomerNameToBill")
  private String customerNameToBill = null;

  @SerializedName("CustomerToRecieve")
  private String customerToRecieve = null;

  @SerializedName("Founder")
  private String founder = null;

  @SerializedName("Owner")
  private String owner = null;

  @SerializedName("Supervisor")
  private String supervisor = null;

  @SerializedName("Worker")
  private String worker = null;

  @SerializedName("Dim1")
  private String dim1 = null;

  @SerializedName("Dim2")
  private String dim2 = null;

  @SerializedName("Dim3")
  private String dim3 = null;

  @SerializedName("Dim1Required")
  private Boolean dim1Required = null;

  @SerializedName("Dim2Required")
  private Boolean dim2Required = null;

  @SerializedName("Dim3Required")
  private Boolean dim3Required = null;

  @SerializedName("FoundingDate")
  private OffsetDateTime foundingDate = null;

  @SerializedName("EstimatedBeginingDate")
  private OffsetDateTime estimatedBeginingDate = null;

  @SerializedName("EstimatedFinishDate")
  private OffsetDateTime estimatedFinishDate = null;

  @SerializedName("ActualBeginingDate")
  private OffsetDateTime actualBeginingDate = null;

  @SerializedName("ActualFinishDate")
  private OffsetDateTime actualFinishDate = null;

  @SerializedName("OptimistDate")
  private OffsetDateTime optimistDate = null;

  @SerializedName("PessimistDate")
  private OffsetDateTime pessimistDate = null;

  /**
   * Gets or Sets jobType
   */
  @JsonAdapter(JobTypeEnum.Adapter.class)
  public enum JobTypeEnum {
    CBTIMEJOB("_cbTimeJob"),
    
    CBSERVICEJOB("_cbServiceJob"),
    
    CBQUOTATIONJOB("_cbQuotationJob"),
    
    CBINHOUSEJOB("_cbInHouseJob");

    private String value;

    JobTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static JobTypeEnum fromValue(String text) {
      for (JobTypeEnum b : JobTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<JobTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final JobTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public JobTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return JobTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("JobType")
  private JobTypeEnum jobType = null;

  /**
   * Gets or Sets jobStatus
   */
  @JsonAdapter(JobStatusEnum.Adapter.class)
  public enum JobStatusEnum {
    NOTSTARTED("NotStarted"),
    
    INPROGRESS("InProgress"),
    
    INWAITING("InWaiting"),
    
    FINISHED("Finished"),
    
    READY("Ready");

    private String value;

    JobStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static JobStatusEnum fromValue(String text) {
      for (JobStatusEnum b : JobStatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<JobStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final JobStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public JobStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return JobStatusEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("JobStatus")
  private JobStatusEnum jobStatus = null;

  /**
   * Gets or Sets jobBillingMode
   */
  @JsonAdapter(JobBillingModeEnum.Adapter.class)
  public enum JobBillingModeEnum {
    MONTHLY("Monthly"),
    
    FINISHED("Finished"),
    
    IRREGULARY("Irregulary"),
    
    BILL("Bill"),
    
    WARRANTY("Warranty");

    private String value;

    JobBillingModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static JobBillingModeEnum fromValue(String text) {
      for (JobBillingModeEnum b : JobBillingModeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<JobBillingModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final JobBillingModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public JobBillingModeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return JobBillingModeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("JobBillingMode")
  private JobBillingModeEnum jobBillingMode = null;

  @SerializedName("PhaseId")
  private String phaseId = null;

  @SerializedName("PhaseRequired")
  private Boolean phaseRequired = null;

  @SerializedName("TaskId")
  private String taskId = null;

  @SerializedName("TaskRequired")
  private Boolean taskRequired = null;

  @SerializedName("ForeignName")
  private String foreignName = null;

  @SerializedName("JobContactName")
  private String jobContactName = null;

  @SerializedName("QuotationAmount")
  private Double quotationAmount = null;

  @SerializedName("Serialnumber")
  private String serialnumber = null;

  @SerializedName("QuotationAmountWithVAT")
  private Boolean quotationAmountWithVAT = null;

  @SerializedName("LedgerCode")
  private String ledgerCode = null;

  /**
   * Gets or Sets discountType
   */
  @JsonAdapter(DiscountTypeEnum.Adapter.class)
  public enum DiscountTypeEnum {
    CUSTOMERDISCOUNT("CustomerDiscount"),
    
    JOBDISCOUNT("JobDiscount"),
    
    NODISCOUNT("NoDiscount");

    private String value;

    DiscountTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DiscountTypeEnum fromValue(String text) {
      for (DiscountTypeEnum b : DiscountTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<DiscountTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DiscountTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DiscountTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return DiscountTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("DiscountType")
  private DiscountTypeEnum discountType = null;

  @SerializedName("JobDiscountPercent")
  private Double jobDiscountPercent = null;

  @SerializedName("DiscountOfTime")
  private Boolean discountOfTime = null;

  @SerializedName("DiscountOfDriveTime")
  private Boolean discountOfDriveTime = null;

  @SerializedName("DiscountOfCost")
  private Boolean discountOfCost = null;

  @SerializedName("ForeignPriceForWork")
  private Double foreignPriceForWork = null;

  @SerializedName("SkipTaxOnInvoice")
  private Boolean skipTaxOnInvoice = null;

  @SerializedName("QuotationCurrencyCode")
  private String quotationCurrencyCode = null;

  @SerializedName("QuotationWorkingHours")
  private Double quotationWorkingHours = null;

  @SerializedName("QuotationWorkingAmount")
  private Double quotationWorkingAmount = null;

  @SerializedName("QuotationCostAmount")
  private Double quotationCostAmount = null;

  @SerializedName("QuotationLicenceAmount")
  private Double quotationLicenceAmount = null;

  @SerializedName("Modified")
  private OffsetDateTime modified = null;

  @SerializedName("LinkedPhases")
  private List<DkCloudDataModelProjectProjectPhaseLinkModel> linkedPhases = null;

  @SerializedName("LinkedTasks")
  private List<DkCloudDataModelProjectProjectTaskLinkModel> linkedTasks = null;

  public DkCloudDataModelProjectProjectModel number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @ApiModelProperty(required = true, value = "")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public DkCloudDataModelProjectProjectModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DkCloudDataModelProjectProjectModel group(String group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @ApiModelProperty(value = "")
  public String getGroup() {
    return group;
  }

  public void setGroup(String group) {
    this.group = group;
  }

  public DkCloudDataModelProjectProjectModel masterJobNumber(String masterJobNumber) {
    this.masterJobNumber = masterJobNumber;
    return this;
  }

   /**
   * Get masterJobNumber
   * @return masterJobNumber
  **/
  @ApiModelProperty(value = "")
  public String getMasterJobNumber() {
    return masterJobNumber;
  }

  public void setMasterJobNumber(String masterJobNumber) {
    this.masterJobNumber = masterJobNumber;
  }

  public DkCloudDataModelProjectProjectModel quotationNumber(Integer quotationNumber) {
    this.quotationNumber = quotationNumber;
    return this;
  }

   /**
   * Get quotationNumber
   * @return quotationNumber
  **/
  @ApiModelProperty(value = "")
  public Integer getQuotationNumber() {
    return quotationNumber;
  }

  public void setQuotationNumber(Integer quotationNumber) {
    this.quotationNumber = quotationNumber;
  }

  public DkCloudDataModelProjectProjectModel customerToBill(String customerToBill) {
    this.customerToBill = customerToBill;
    return this;
  }

   /**
   * Get customerToBill
   * @return customerToBill
  **/
  @ApiModelProperty(value = "")
  public String getCustomerToBill() {
    return customerToBill;
  }

  public void setCustomerToBill(String customerToBill) {
    this.customerToBill = customerToBill;
  }

  public DkCloudDataModelProjectProjectModel customerNameToBill(String customerNameToBill) {
    this.customerNameToBill = customerNameToBill;
    return this;
  }

   /**
   * Get customerNameToBill
   * @return customerNameToBill
  **/
  @ApiModelProperty(value = "")
  public String getCustomerNameToBill() {
    return customerNameToBill;
  }

  public void setCustomerNameToBill(String customerNameToBill) {
    this.customerNameToBill = customerNameToBill;
  }

  public DkCloudDataModelProjectProjectModel customerToRecieve(String customerToRecieve) {
    this.customerToRecieve = customerToRecieve;
    return this;
  }

   /**
   * Get customerToRecieve
   * @return customerToRecieve
  **/
  @ApiModelProperty(value = "")
  public String getCustomerToRecieve() {
    return customerToRecieve;
  }

  public void setCustomerToRecieve(String customerToRecieve) {
    this.customerToRecieve = customerToRecieve;
  }

  public DkCloudDataModelProjectProjectModel founder(String founder) {
    this.founder = founder;
    return this;
  }

   /**
   * Get founder
   * @return founder
  **/
  @ApiModelProperty(value = "")
  public String getFounder() {
    return founder;
  }

  public void setFounder(String founder) {
    this.founder = founder;
  }

  public DkCloudDataModelProjectProjectModel owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public DkCloudDataModelProjectProjectModel supervisor(String supervisor) {
    this.supervisor = supervisor;
    return this;
  }

   /**
   * Get supervisor
   * @return supervisor
  **/
  @ApiModelProperty(value = "")
  public String getSupervisor() {
    return supervisor;
  }

  public void setSupervisor(String supervisor) {
    this.supervisor = supervisor;
  }

  public DkCloudDataModelProjectProjectModel worker(String worker) {
    this.worker = worker;
    return this;
  }

   /**
   * Get worker
   * @return worker
  **/
  @ApiModelProperty(value = "")
  public String getWorker() {
    return worker;
  }

  public void setWorker(String worker) {
    this.worker = worker;
  }

  public DkCloudDataModelProjectProjectModel dim1(String dim1) {
    this.dim1 = dim1;
    return this;
  }

   /**
   * Get dim1
   * @return dim1
  **/
  @ApiModelProperty(value = "")
  public String getDim1() {
    return dim1;
  }

  public void setDim1(String dim1) {
    this.dim1 = dim1;
  }

  public DkCloudDataModelProjectProjectModel dim2(String dim2) {
    this.dim2 = dim2;
    return this;
  }

   /**
   * Get dim2
   * @return dim2
  **/
  @ApiModelProperty(value = "")
  public String getDim2() {
    return dim2;
  }

  public void setDim2(String dim2) {
    this.dim2 = dim2;
  }

  public DkCloudDataModelProjectProjectModel dim3(String dim3) {
    this.dim3 = dim3;
    return this;
  }

   /**
   * Get dim3
   * @return dim3
  **/
  @ApiModelProperty(value = "")
  public String getDim3() {
    return dim3;
  }

  public void setDim3(String dim3) {
    this.dim3 = dim3;
  }

  public DkCloudDataModelProjectProjectModel dim1Required(Boolean dim1Required) {
    this.dim1Required = dim1Required;
    return this;
  }

   /**
   * Get dim1Required
   * @return dim1Required
  **/
  @ApiModelProperty(value = "")
  public Boolean isDim1Required() {
    return dim1Required;
  }

  public void setDim1Required(Boolean dim1Required) {
    this.dim1Required = dim1Required;
  }

  public DkCloudDataModelProjectProjectModel dim2Required(Boolean dim2Required) {
    this.dim2Required = dim2Required;
    return this;
  }

   /**
   * Get dim2Required
   * @return dim2Required
  **/
  @ApiModelProperty(value = "")
  public Boolean isDim2Required() {
    return dim2Required;
  }

  public void setDim2Required(Boolean dim2Required) {
    this.dim2Required = dim2Required;
  }

  public DkCloudDataModelProjectProjectModel dim3Required(Boolean dim3Required) {
    this.dim3Required = dim3Required;
    return this;
  }

   /**
   * Get dim3Required
   * @return dim3Required
  **/
  @ApiModelProperty(value = "")
  public Boolean isDim3Required() {
    return dim3Required;
  }

  public void setDim3Required(Boolean dim3Required) {
    this.dim3Required = dim3Required;
  }

  public DkCloudDataModelProjectProjectModel foundingDate(OffsetDateTime foundingDate) {
    this.foundingDate = foundingDate;
    return this;
  }

   /**
   * Get foundingDate
   * @return foundingDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getFoundingDate() {
    return foundingDate;
  }

  public void setFoundingDate(OffsetDateTime foundingDate) {
    this.foundingDate = foundingDate;
  }

  public DkCloudDataModelProjectProjectModel estimatedBeginingDate(OffsetDateTime estimatedBeginingDate) {
    this.estimatedBeginingDate = estimatedBeginingDate;
    return this;
  }

   /**
   * Get estimatedBeginingDate
   * @return estimatedBeginingDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEstimatedBeginingDate() {
    return estimatedBeginingDate;
  }

  public void setEstimatedBeginingDate(OffsetDateTime estimatedBeginingDate) {
    this.estimatedBeginingDate = estimatedBeginingDate;
  }

  public DkCloudDataModelProjectProjectModel estimatedFinishDate(OffsetDateTime estimatedFinishDate) {
    this.estimatedFinishDate = estimatedFinishDate;
    return this;
  }

   /**
   * Get estimatedFinishDate
   * @return estimatedFinishDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEstimatedFinishDate() {
    return estimatedFinishDate;
  }

  public void setEstimatedFinishDate(OffsetDateTime estimatedFinishDate) {
    this.estimatedFinishDate = estimatedFinishDate;
  }

  public DkCloudDataModelProjectProjectModel actualBeginingDate(OffsetDateTime actualBeginingDate) {
    this.actualBeginingDate = actualBeginingDate;
    return this;
  }

   /**
   * Get actualBeginingDate
   * @return actualBeginingDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getActualBeginingDate() {
    return actualBeginingDate;
  }

  public void setActualBeginingDate(OffsetDateTime actualBeginingDate) {
    this.actualBeginingDate = actualBeginingDate;
  }

  public DkCloudDataModelProjectProjectModel actualFinishDate(OffsetDateTime actualFinishDate) {
    this.actualFinishDate = actualFinishDate;
    return this;
  }

   /**
   * Get actualFinishDate
   * @return actualFinishDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getActualFinishDate() {
    return actualFinishDate;
  }

  public void setActualFinishDate(OffsetDateTime actualFinishDate) {
    this.actualFinishDate = actualFinishDate;
  }

  public DkCloudDataModelProjectProjectModel optimistDate(OffsetDateTime optimistDate) {
    this.optimistDate = optimistDate;
    return this;
  }

   /**
   * Get optimistDate
   * @return optimistDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getOptimistDate() {
    return optimistDate;
  }

  public void setOptimistDate(OffsetDateTime optimistDate) {
    this.optimistDate = optimistDate;
  }

  public DkCloudDataModelProjectProjectModel pessimistDate(OffsetDateTime pessimistDate) {
    this.pessimistDate = pessimistDate;
    return this;
  }

   /**
   * Get pessimistDate
   * @return pessimistDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getPessimistDate() {
    return pessimistDate;
  }

  public void setPessimistDate(OffsetDateTime pessimistDate) {
    this.pessimistDate = pessimistDate;
  }

  public DkCloudDataModelProjectProjectModel jobType(JobTypeEnum jobType) {
    this.jobType = jobType;
    return this;
  }

   /**
   * Get jobType
   * @return jobType
  **/
  @ApiModelProperty(value = "")
  public JobTypeEnum getJobType() {
    return jobType;
  }

  public void setJobType(JobTypeEnum jobType) {
    this.jobType = jobType;
  }

  public DkCloudDataModelProjectProjectModel jobStatus(JobStatusEnum jobStatus) {
    this.jobStatus = jobStatus;
    return this;
  }

   /**
   * Get jobStatus
   * @return jobStatus
  **/
  @ApiModelProperty(value = "")
  public JobStatusEnum getJobStatus() {
    return jobStatus;
  }

  public void setJobStatus(JobStatusEnum jobStatus) {
    this.jobStatus = jobStatus;
  }

  public DkCloudDataModelProjectProjectModel jobBillingMode(JobBillingModeEnum jobBillingMode) {
    this.jobBillingMode = jobBillingMode;
    return this;
  }

   /**
   * Get jobBillingMode
   * @return jobBillingMode
  **/
  @ApiModelProperty(value = "")
  public JobBillingModeEnum getJobBillingMode() {
    return jobBillingMode;
  }

  public void setJobBillingMode(JobBillingModeEnum jobBillingMode) {
    this.jobBillingMode = jobBillingMode;
  }

  public DkCloudDataModelProjectProjectModel phaseId(String phaseId) {
    this.phaseId = phaseId;
    return this;
  }

   /**
   * Get phaseId
   * @return phaseId
  **/
  @ApiModelProperty(value = "")
  public String getPhaseId() {
    return phaseId;
  }

  public void setPhaseId(String phaseId) {
    this.phaseId = phaseId;
  }

  public DkCloudDataModelProjectProjectModel phaseRequired(Boolean phaseRequired) {
    this.phaseRequired = phaseRequired;
    return this;
  }

   /**
   * Get phaseRequired
   * @return phaseRequired
  **/
  @ApiModelProperty(value = "")
  public Boolean isPhaseRequired() {
    return phaseRequired;
  }

  public void setPhaseRequired(Boolean phaseRequired) {
    this.phaseRequired = phaseRequired;
  }

  public DkCloudDataModelProjectProjectModel taskId(String taskId) {
    this.taskId = taskId;
    return this;
  }

   /**
   * Get taskId
   * @return taskId
  **/
  @ApiModelProperty(value = "")
  public String getTaskId() {
    return taskId;
  }

  public void setTaskId(String taskId) {
    this.taskId = taskId;
  }

  public DkCloudDataModelProjectProjectModel taskRequired(Boolean taskRequired) {
    this.taskRequired = taskRequired;
    return this;
  }

   /**
   * Get taskRequired
   * @return taskRequired
  **/
  @ApiModelProperty(value = "")
  public Boolean isTaskRequired() {
    return taskRequired;
  }

  public void setTaskRequired(Boolean taskRequired) {
    this.taskRequired = taskRequired;
  }

  public DkCloudDataModelProjectProjectModel foreignName(String foreignName) {
    this.foreignName = foreignName;
    return this;
  }

   /**
   * Get foreignName
   * @return foreignName
  **/
  @ApiModelProperty(value = "")
  public String getForeignName() {
    return foreignName;
  }

  public void setForeignName(String foreignName) {
    this.foreignName = foreignName;
  }

  public DkCloudDataModelProjectProjectModel jobContactName(String jobContactName) {
    this.jobContactName = jobContactName;
    return this;
  }

   /**
   * Get jobContactName
   * @return jobContactName
  **/
  @ApiModelProperty(value = "")
  public String getJobContactName() {
    return jobContactName;
  }

  public void setJobContactName(String jobContactName) {
    this.jobContactName = jobContactName;
  }

  public DkCloudDataModelProjectProjectModel quotationAmount(Double quotationAmount) {
    this.quotationAmount = quotationAmount;
    return this;
  }

   /**
   * Get quotationAmount
   * @return quotationAmount
  **/
  @ApiModelProperty(value = "")
  public Double getQuotationAmount() {
    return quotationAmount;
  }

  public void setQuotationAmount(Double quotationAmount) {
    this.quotationAmount = quotationAmount;
  }

  public DkCloudDataModelProjectProjectModel serialnumber(String serialnumber) {
    this.serialnumber = serialnumber;
    return this;
  }

   /**
   * Get serialnumber
   * @return serialnumber
  **/
  @ApiModelProperty(value = "")
  public String getSerialnumber() {
    return serialnumber;
  }

  public void setSerialnumber(String serialnumber) {
    this.serialnumber = serialnumber;
  }

  public DkCloudDataModelProjectProjectModel quotationAmountWithVAT(Boolean quotationAmountWithVAT) {
    this.quotationAmountWithVAT = quotationAmountWithVAT;
    return this;
  }

   /**
   * Get quotationAmountWithVAT
   * @return quotationAmountWithVAT
  **/
  @ApiModelProperty(value = "")
  public Boolean isQuotationAmountWithVAT() {
    return quotationAmountWithVAT;
  }

  public void setQuotationAmountWithVAT(Boolean quotationAmountWithVAT) {
    this.quotationAmountWithVAT = quotationAmountWithVAT;
  }

  public DkCloudDataModelProjectProjectModel ledgerCode(String ledgerCode) {
    this.ledgerCode = ledgerCode;
    return this;
  }

   /**
   * Get ledgerCode
   * @return ledgerCode
  **/
  @ApiModelProperty(value = "")
  public String getLedgerCode() {
    return ledgerCode;
  }

  public void setLedgerCode(String ledgerCode) {
    this.ledgerCode = ledgerCode;
  }

  public DkCloudDataModelProjectProjectModel discountType(DiscountTypeEnum discountType) {
    this.discountType = discountType;
    return this;
  }

   /**
   * Get discountType
   * @return discountType
  **/
  @ApiModelProperty(value = "")
  public DiscountTypeEnum getDiscountType() {
    return discountType;
  }

  public void setDiscountType(DiscountTypeEnum discountType) {
    this.discountType = discountType;
  }

  public DkCloudDataModelProjectProjectModel jobDiscountPercent(Double jobDiscountPercent) {
    this.jobDiscountPercent = jobDiscountPercent;
    return this;
  }

   /**
   * Get jobDiscountPercent
   * @return jobDiscountPercent
  **/
  @ApiModelProperty(value = "")
  public Double getJobDiscountPercent() {
    return jobDiscountPercent;
  }

  public void setJobDiscountPercent(Double jobDiscountPercent) {
    this.jobDiscountPercent = jobDiscountPercent;
  }

  public DkCloudDataModelProjectProjectModel discountOfTime(Boolean discountOfTime) {
    this.discountOfTime = discountOfTime;
    return this;
  }

   /**
   * Get discountOfTime
   * @return discountOfTime
  **/
  @ApiModelProperty(value = "")
  public Boolean isDiscountOfTime() {
    return discountOfTime;
  }

  public void setDiscountOfTime(Boolean discountOfTime) {
    this.discountOfTime = discountOfTime;
  }

  public DkCloudDataModelProjectProjectModel discountOfDriveTime(Boolean discountOfDriveTime) {
    this.discountOfDriveTime = discountOfDriveTime;
    return this;
  }

   /**
   * Get discountOfDriveTime
   * @return discountOfDriveTime
  **/
  @ApiModelProperty(value = "")
  public Boolean isDiscountOfDriveTime() {
    return discountOfDriveTime;
  }

  public void setDiscountOfDriveTime(Boolean discountOfDriveTime) {
    this.discountOfDriveTime = discountOfDriveTime;
  }

  public DkCloudDataModelProjectProjectModel discountOfCost(Boolean discountOfCost) {
    this.discountOfCost = discountOfCost;
    return this;
  }

   /**
   * Get discountOfCost
   * @return discountOfCost
  **/
  @ApiModelProperty(value = "")
  public Boolean isDiscountOfCost() {
    return discountOfCost;
  }

  public void setDiscountOfCost(Boolean discountOfCost) {
    this.discountOfCost = discountOfCost;
  }

  public DkCloudDataModelProjectProjectModel foreignPriceForWork(Double foreignPriceForWork) {
    this.foreignPriceForWork = foreignPriceForWork;
    return this;
  }

   /**
   * Get foreignPriceForWork
   * @return foreignPriceForWork
  **/
  @ApiModelProperty(value = "")
  public Double getForeignPriceForWork() {
    return foreignPriceForWork;
  }

  public void setForeignPriceForWork(Double foreignPriceForWork) {
    this.foreignPriceForWork = foreignPriceForWork;
  }

  public DkCloudDataModelProjectProjectModel skipTaxOnInvoice(Boolean skipTaxOnInvoice) {
    this.skipTaxOnInvoice = skipTaxOnInvoice;
    return this;
  }

   /**
   * Get skipTaxOnInvoice
   * @return skipTaxOnInvoice
  **/
  @ApiModelProperty(value = "")
  public Boolean isSkipTaxOnInvoice() {
    return skipTaxOnInvoice;
  }

  public void setSkipTaxOnInvoice(Boolean skipTaxOnInvoice) {
    this.skipTaxOnInvoice = skipTaxOnInvoice;
  }

  public DkCloudDataModelProjectProjectModel quotationCurrencyCode(String quotationCurrencyCode) {
    this.quotationCurrencyCode = quotationCurrencyCode;
    return this;
  }

   /**
   * Get quotationCurrencyCode
   * @return quotationCurrencyCode
  **/
  @ApiModelProperty(value = "")
  public String getQuotationCurrencyCode() {
    return quotationCurrencyCode;
  }

  public void setQuotationCurrencyCode(String quotationCurrencyCode) {
    this.quotationCurrencyCode = quotationCurrencyCode;
  }

  public DkCloudDataModelProjectProjectModel quotationWorkingHours(Double quotationWorkingHours) {
    this.quotationWorkingHours = quotationWorkingHours;
    return this;
  }

   /**
   * Get quotationWorkingHours
   * @return quotationWorkingHours
  **/
  @ApiModelProperty(value = "")
  public Double getQuotationWorkingHours() {
    return quotationWorkingHours;
  }

  public void setQuotationWorkingHours(Double quotationWorkingHours) {
    this.quotationWorkingHours = quotationWorkingHours;
  }

  public DkCloudDataModelProjectProjectModel quotationWorkingAmount(Double quotationWorkingAmount) {
    this.quotationWorkingAmount = quotationWorkingAmount;
    return this;
  }

   /**
   * Get quotationWorkingAmount
   * @return quotationWorkingAmount
  **/
  @ApiModelProperty(value = "")
  public Double getQuotationWorkingAmount() {
    return quotationWorkingAmount;
  }

  public void setQuotationWorkingAmount(Double quotationWorkingAmount) {
    this.quotationWorkingAmount = quotationWorkingAmount;
  }

  public DkCloudDataModelProjectProjectModel quotationCostAmount(Double quotationCostAmount) {
    this.quotationCostAmount = quotationCostAmount;
    return this;
  }

   /**
   * Get quotationCostAmount
   * @return quotationCostAmount
  **/
  @ApiModelProperty(value = "")
  public Double getQuotationCostAmount() {
    return quotationCostAmount;
  }

  public void setQuotationCostAmount(Double quotationCostAmount) {
    this.quotationCostAmount = quotationCostAmount;
  }

  public DkCloudDataModelProjectProjectModel quotationLicenceAmount(Double quotationLicenceAmount) {
    this.quotationLicenceAmount = quotationLicenceAmount;
    return this;
  }

   /**
   * Get quotationLicenceAmount
   * @return quotationLicenceAmount
  **/
  @ApiModelProperty(value = "")
  public Double getQuotationLicenceAmount() {
    return quotationLicenceAmount;
  }

  public void setQuotationLicenceAmount(Double quotationLicenceAmount) {
    this.quotationLicenceAmount = quotationLicenceAmount;
  }

  public DkCloudDataModelProjectProjectModel modified(OffsetDateTime modified) {
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getModified() {
    return modified;
  }

  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }

  public DkCloudDataModelProjectProjectModel linkedPhases(List<DkCloudDataModelProjectProjectPhaseLinkModel> linkedPhases) {
    this.linkedPhases = linkedPhases;
    return this;
  }

  public DkCloudDataModelProjectProjectModel addLinkedPhasesItem(DkCloudDataModelProjectProjectPhaseLinkModel linkedPhasesItem) {
    if (this.linkedPhases == null) {
      this.linkedPhases = new ArrayList<DkCloudDataModelProjectProjectPhaseLinkModel>();
    }
    this.linkedPhases.add(linkedPhasesItem);
    return this;
  }

   /**
   * Get linkedPhases
   * @return linkedPhases
  **/
  @ApiModelProperty(value = "")
  public List<DkCloudDataModelProjectProjectPhaseLinkModel> getLinkedPhases() {
    return linkedPhases;
  }

  public void setLinkedPhases(List<DkCloudDataModelProjectProjectPhaseLinkModel> linkedPhases) {
    this.linkedPhases = linkedPhases;
  }

  public DkCloudDataModelProjectProjectModel linkedTasks(List<DkCloudDataModelProjectProjectTaskLinkModel> linkedTasks) {
    this.linkedTasks = linkedTasks;
    return this;
  }

  public DkCloudDataModelProjectProjectModel addLinkedTasksItem(DkCloudDataModelProjectProjectTaskLinkModel linkedTasksItem) {
    if (this.linkedTasks == null) {
      this.linkedTasks = new ArrayList<DkCloudDataModelProjectProjectTaskLinkModel>();
    }
    this.linkedTasks.add(linkedTasksItem);
    return this;
  }

   /**
   * Get linkedTasks
   * @return linkedTasks
  **/
  @ApiModelProperty(value = "")
  public List<DkCloudDataModelProjectProjectTaskLinkModel> getLinkedTasks() {
    return linkedTasks;
  }

  public void setLinkedTasks(List<DkCloudDataModelProjectProjectTaskLinkModel> linkedTasks) {
    this.linkedTasks = linkedTasks;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DkCloudDataModelProjectProjectModel dkCloudDataModelProjectProjectModel = (DkCloudDataModelProjectProjectModel) o;
    return Objects.equals(this.number, dkCloudDataModelProjectProjectModel.number) &&
        Objects.equals(this.name, dkCloudDataModelProjectProjectModel.name) &&
        Objects.equals(this.group, dkCloudDataModelProjectProjectModel.group) &&
        Objects.equals(this.masterJobNumber, dkCloudDataModelProjectProjectModel.masterJobNumber) &&
        Objects.equals(this.quotationNumber, dkCloudDataModelProjectProjectModel.quotationNumber) &&
        Objects.equals(this.customerToBill, dkCloudDataModelProjectProjectModel.customerToBill) &&
        Objects.equals(this.customerNameToBill, dkCloudDataModelProjectProjectModel.customerNameToBill) &&
        Objects.equals(this.customerToRecieve, dkCloudDataModelProjectProjectModel.customerToRecieve) &&
        Objects.equals(this.founder, dkCloudDataModelProjectProjectModel.founder) &&
        Objects.equals(this.owner, dkCloudDataModelProjectProjectModel.owner) &&
        Objects.equals(this.supervisor, dkCloudDataModelProjectProjectModel.supervisor) &&
        Objects.equals(this.worker, dkCloudDataModelProjectProjectModel.worker) &&
        Objects.equals(this.dim1, dkCloudDataModelProjectProjectModel.dim1) &&
        Objects.equals(this.dim2, dkCloudDataModelProjectProjectModel.dim2) &&
        Objects.equals(this.dim3, dkCloudDataModelProjectProjectModel.dim3) &&
        Objects.equals(this.dim1Required, dkCloudDataModelProjectProjectModel.dim1Required) &&
        Objects.equals(this.dim2Required, dkCloudDataModelProjectProjectModel.dim2Required) &&
        Objects.equals(this.dim3Required, dkCloudDataModelProjectProjectModel.dim3Required) &&
        Objects.equals(this.foundingDate, dkCloudDataModelProjectProjectModel.foundingDate) &&
        Objects.equals(this.estimatedBeginingDate, dkCloudDataModelProjectProjectModel.estimatedBeginingDate) &&
        Objects.equals(this.estimatedFinishDate, dkCloudDataModelProjectProjectModel.estimatedFinishDate) &&
        Objects.equals(this.actualBeginingDate, dkCloudDataModelProjectProjectModel.actualBeginingDate) &&
        Objects.equals(this.actualFinishDate, dkCloudDataModelProjectProjectModel.actualFinishDate) &&
        Objects.equals(this.optimistDate, dkCloudDataModelProjectProjectModel.optimistDate) &&
        Objects.equals(this.pessimistDate, dkCloudDataModelProjectProjectModel.pessimistDate) &&
        Objects.equals(this.jobType, dkCloudDataModelProjectProjectModel.jobType) &&
        Objects.equals(this.jobStatus, dkCloudDataModelProjectProjectModel.jobStatus) &&
        Objects.equals(this.jobBillingMode, dkCloudDataModelProjectProjectModel.jobBillingMode) &&
        Objects.equals(this.phaseId, dkCloudDataModelProjectProjectModel.phaseId) &&
        Objects.equals(this.phaseRequired, dkCloudDataModelProjectProjectModel.phaseRequired) &&
        Objects.equals(this.taskId, dkCloudDataModelProjectProjectModel.taskId) &&
        Objects.equals(this.taskRequired, dkCloudDataModelProjectProjectModel.taskRequired) &&
        Objects.equals(this.foreignName, dkCloudDataModelProjectProjectModel.foreignName) &&
        Objects.equals(this.jobContactName, dkCloudDataModelProjectProjectModel.jobContactName) &&
        Objects.equals(this.quotationAmount, dkCloudDataModelProjectProjectModel.quotationAmount) &&
        Objects.equals(this.serialnumber, dkCloudDataModelProjectProjectModel.serialnumber) &&
        Objects.equals(this.quotationAmountWithVAT, dkCloudDataModelProjectProjectModel.quotationAmountWithVAT) &&
        Objects.equals(this.ledgerCode, dkCloudDataModelProjectProjectModel.ledgerCode) &&
        Objects.equals(this.discountType, dkCloudDataModelProjectProjectModel.discountType) &&
        Objects.equals(this.jobDiscountPercent, dkCloudDataModelProjectProjectModel.jobDiscountPercent) &&
        Objects.equals(this.discountOfTime, dkCloudDataModelProjectProjectModel.discountOfTime) &&
        Objects.equals(this.discountOfDriveTime, dkCloudDataModelProjectProjectModel.discountOfDriveTime) &&
        Objects.equals(this.discountOfCost, dkCloudDataModelProjectProjectModel.discountOfCost) &&
        Objects.equals(this.foreignPriceForWork, dkCloudDataModelProjectProjectModel.foreignPriceForWork) &&
        Objects.equals(this.skipTaxOnInvoice, dkCloudDataModelProjectProjectModel.skipTaxOnInvoice) &&
        Objects.equals(this.quotationCurrencyCode, dkCloudDataModelProjectProjectModel.quotationCurrencyCode) &&
        Objects.equals(this.quotationWorkingHours, dkCloudDataModelProjectProjectModel.quotationWorkingHours) &&
        Objects.equals(this.quotationWorkingAmount, dkCloudDataModelProjectProjectModel.quotationWorkingAmount) &&
        Objects.equals(this.quotationCostAmount, dkCloudDataModelProjectProjectModel.quotationCostAmount) &&
        Objects.equals(this.quotationLicenceAmount, dkCloudDataModelProjectProjectModel.quotationLicenceAmount) &&
        Objects.equals(this.modified, dkCloudDataModelProjectProjectModel.modified) &&
        Objects.equals(this.linkedPhases, dkCloudDataModelProjectProjectModel.linkedPhases) &&
        Objects.equals(this.linkedTasks, dkCloudDataModelProjectProjectModel.linkedTasks);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, name, group, masterJobNumber, quotationNumber, customerToBill, customerNameToBill, customerToRecieve, founder, owner, supervisor, worker, dim1, dim2, dim3, dim1Required, dim2Required, dim3Required, foundingDate, estimatedBeginingDate, estimatedFinishDate, actualBeginingDate, actualFinishDate, optimistDate, pessimistDate, jobType, jobStatus, jobBillingMode, phaseId, phaseRequired, taskId, taskRequired, foreignName, jobContactName, quotationAmount, serialnumber, quotationAmountWithVAT, ledgerCode, discountType, jobDiscountPercent, discountOfTime, discountOfDriveTime, discountOfCost, foreignPriceForWork, skipTaxOnInvoice, quotationCurrencyCode, quotationWorkingHours, quotationWorkingAmount, quotationCostAmount, quotationLicenceAmount, modified, linkedPhases, linkedTasks);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DkCloudDataModelProjectProjectModel {\n");
    
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    masterJobNumber: ").append(toIndentedString(masterJobNumber)).append("\n");
    sb.append("    quotationNumber: ").append(toIndentedString(quotationNumber)).append("\n");
    sb.append("    customerToBill: ").append(toIndentedString(customerToBill)).append("\n");
    sb.append("    customerNameToBill: ").append(toIndentedString(customerNameToBill)).append("\n");
    sb.append("    customerToRecieve: ").append(toIndentedString(customerToRecieve)).append("\n");
    sb.append("    founder: ").append(toIndentedString(founder)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    supervisor: ").append(toIndentedString(supervisor)).append("\n");
    sb.append("    worker: ").append(toIndentedString(worker)).append("\n");
    sb.append("    dim1: ").append(toIndentedString(dim1)).append("\n");
    sb.append("    dim2: ").append(toIndentedString(dim2)).append("\n");
    sb.append("    dim3: ").append(toIndentedString(dim3)).append("\n");
    sb.append("    dim1Required: ").append(toIndentedString(dim1Required)).append("\n");
    sb.append("    dim2Required: ").append(toIndentedString(dim2Required)).append("\n");
    sb.append("    dim3Required: ").append(toIndentedString(dim3Required)).append("\n");
    sb.append("    foundingDate: ").append(toIndentedString(foundingDate)).append("\n");
    sb.append("    estimatedBeginingDate: ").append(toIndentedString(estimatedBeginingDate)).append("\n");
    sb.append("    estimatedFinishDate: ").append(toIndentedString(estimatedFinishDate)).append("\n");
    sb.append("    actualBeginingDate: ").append(toIndentedString(actualBeginingDate)).append("\n");
    sb.append("    actualFinishDate: ").append(toIndentedString(actualFinishDate)).append("\n");
    sb.append("    optimistDate: ").append(toIndentedString(optimistDate)).append("\n");
    sb.append("    pessimistDate: ").append(toIndentedString(pessimistDate)).append("\n");
    sb.append("    jobType: ").append(toIndentedString(jobType)).append("\n");
    sb.append("    jobStatus: ").append(toIndentedString(jobStatus)).append("\n");
    sb.append("    jobBillingMode: ").append(toIndentedString(jobBillingMode)).append("\n");
    sb.append("    phaseId: ").append(toIndentedString(phaseId)).append("\n");
    sb.append("    phaseRequired: ").append(toIndentedString(phaseRequired)).append("\n");
    sb.append("    taskId: ").append(toIndentedString(taskId)).append("\n");
    sb.append("    taskRequired: ").append(toIndentedString(taskRequired)).append("\n");
    sb.append("    foreignName: ").append(toIndentedString(foreignName)).append("\n");
    sb.append("    jobContactName: ").append(toIndentedString(jobContactName)).append("\n");
    sb.append("    quotationAmount: ").append(toIndentedString(quotationAmount)).append("\n");
    sb.append("    serialnumber: ").append(toIndentedString(serialnumber)).append("\n");
    sb.append("    quotationAmountWithVAT: ").append(toIndentedString(quotationAmountWithVAT)).append("\n");
    sb.append("    ledgerCode: ").append(toIndentedString(ledgerCode)).append("\n");
    sb.append("    discountType: ").append(toIndentedString(discountType)).append("\n");
    sb.append("    jobDiscountPercent: ").append(toIndentedString(jobDiscountPercent)).append("\n");
    sb.append("    discountOfTime: ").append(toIndentedString(discountOfTime)).append("\n");
    sb.append("    discountOfDriveTime: ").append(toIndentedString(discountOfDriveTime)).append("\n");
    sb.append("    discountOfCost: ").append(toIndentedString(discountOfCost)).append("\n");
    sb.append("    foreignPriceForWork: ").append(toIndentedString(foreignPriceForWork)).append("\n");
    sb.append("    skipTaxOnInvoice: ").append(toIndentedString(skipTaxOnInvoice)).append("\n");
    sb.append("    quotationCurrencyCode: ").append(toIndentedString(quotationCurrencyCode)).append("\n");
    sb.append("    quotationWorkingHours: ").append(toIndentedString(quotationWorkingHours)).append("\n");
    sb.append("    quotationWorkingAmount: ").append(toIndentedString(quotationWorkingAmount)).append("\n");
    sb.append("    quotationCostAmount: ").append(toIndentedString(quotationCostAmount)).append("\n");
    sb.append("    quotationLicenceAmount: ").append(toIndentedString(quotationLicenceAmount)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    linkedPhases: ").append(toIndentedString(linkedPhases)).append("\n");
    sb.append("    linkedTasks: ").append(toIndentedString(linkedTasks)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * dkPlus.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * DkCloudDataModelCustomersTransactionModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-12T12:57:09.866Z")



public class DkCloudDataModelCustomersTransactionModel {
  @SerializedName("ID")
  private Integer ID = null;

  @SerializedName("InvoiceNumber")
  private String invoiceNumber = null;

  @SerializedName("Customer")
  private String customer = null;

  @SerializedName("Created")
  private OffsetDateTime created = null;

  @SerializedName("CreatedBy")
  private String createdBy = null;

  @SerializedName("Modified")
  private OffsetDateTime modified = null;

  @SerializedName("Text")
  private String text = null;

  @SerializedName("Reference")
  private String reference = null;

  @SerializedName("Dim1")
  private String dim1 = null;

  @SerializedName("Dim2")
  private String dim2 = null;

  @SerializedName("Dim3")
  private String dim3 = null;

  @SerializedName("JournalDate")
  private OffsetDateTime journalDate = null;

  @SerializedName("DueDate")
  private OffsetDateTime dueDate = null;

  @SerializedName("JournalHeadCode")
  private String journalHeadCode = null;

  @SerializedName("SettledCurrencyAmount")
  private Double settledCurrencyAmount = null;

  @SerializedName("SettledAmount")
  private Double settledAmount = null;

  @SerializedName("SettledStatus")
  private Double settledStatus = null;

  @SerializedName("Settled")
  private Boolean settled = null;

  @SerializedName("InputAmount")
  private Double inputAmount = null;

  @SerializedName("CurrencyAmount")
  private Double currencyAmount = null;

  @SerializedName("Amount")
  private Double amount = null;

  @SerializedName("Currency")
  private String currency = null;

  @SerializedName("Exchange")
  private Double exchange = null;

  @SerializedName("Code")
  private Integer code = null;

  @SerializedName("Voucher")
  private String voucher = null;

  @SerializedName("Origin")
  private Integer origin = null;

  @SerializedName("ClaimStatus")
  private Integer claimStatus = null;

  /**
   * Gets or Sets recordType
   */
  @JsonAdapter(RecordTypeEnum.Adapter.class)
  public enum RecordTypeEnum {
    DEBETJOURNAL("DebetJournal"),
    
    CREDITJOURNAL("CreditJournal"),
    
    DEBETINVOICE("DebetInvoice"),
    
    CREDITINVOICE("CreditInvoice"),
    
    RETURNINVOICE("ReturnInvoice"),
    
    INTEREST("Interest"),
    
    EXCHANGERATEDIFFERENCE("ExchangeRateDifference"),
    
    DEBETORJOURNAL("DebetORJournal"),
    
    CREDITORJOURNAL("CreditORJournal"),
    
    CLAIMBASE("ClaimBase"),
    
    PAYEDCLAIM("PayedClaim"),
    
    DROPPEDCLAIM("DroppedClaim"),
    
    CREDITCARDBASE("CreditcardBase"),
    
    PAYEDCREDITCARD("PayedCreditcard");

    private String value;

    RecordTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RecordTypeEnum fromValue(String text) {
      for (RecordTypeEnum b : RecordTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<RecordTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RecordTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RecordTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return RecordTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("RecordType")
  private RecordTypeEnum recordType = null;

  /**
   * Gets or Sets journalType
   */
  @JsonAdapter(JournalTypeEnum.Adapter.class)
  public enum JournalTypeEnum {
    GENERALLEDGER("GeneralLedger"),
    
    ACCOUNTSRECEIVABLE("AccountsReceivable"),
    
    ACCOUNTSPAYABLE("AccountsPayable"),
    
    PROJECTS("Projects"),
    
    PAYROLL("Payroll"),
    
    FIXEDASSETS("FixedAssets"),
    
    MEMBERPAYMENTS("MemberPayments"),
    
    BANKTRANSACTION("BankTransaction"),
    
    SUPPORTER("Supporter"),
    
    BOOKING("Booking");

    private String value;

    JournalTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static JournalTypeEnum fromValue(String text) {
      for (JournalTypeEnum b : JournalTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<JournalTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final JournalTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public JournalTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return JournalTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("JournalType")
  private JournalTypeEnum journalType = null;

  @SerializedName("SettleId")
  private Integer settleId = null;

  public DkCloudDataModelCustomersTransactionModel ID(Integer ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @ApiModelProperty(value = "")
  public Integer getID() {
    return ID;
  }

  public void setID(Integer ID) {
    this.ID = ID;
  }

  public DkCloudDataModelCustomersTransactionModel invoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
    return this;
  }

   /**
   * Get invoiceNumber
   * @return invoiceNumber
  **/
  @ApiModelProperty(value = "")
  public String getInvoiceNumber() {
    return invoiceNumber;
  }

  public void setInvoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }

  public DkCloudDataModelCustomersTransactionModel customer(String customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(value = "")
  public String getCustomer() {
    return customer;
  }

  public void setCustomer(String customer) {
    this.customer = customer;
  }

  public DkCloudDataModelCustomersTransactionModel created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public DkCloudDataModelCustomersTransactionModel createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public DkCloudDataModelCustomersTransactionModel modified(OffsetDateTime modified) {
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getModified() {
    return modified;
  }

  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }

  public DkCloudDataModelCustomersTransactionModel text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public DkCloudDataModelCustomersTransactionModel reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @ApiModelProperty(value = "")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public DkCloudDataModelCustomersTransactionModel dim1(String dim1) {
    this.dim1 = dim1;
    return this;
  }

   /**
   * Get dim1
   * @return dim1
  **/
  @ApiModelProperty(value = "")
  public String getDim1() {
    return dim1;
  }

  public void setDim1(String dim1) {
    this.dim1 = dim1;
  }

  public DkCloudDataModelCustomersTransactionModel dim2(String dim2) {
    this.dim2 = dim2;
    return this;
  }

   /**
   * Get dim2
   * @return dim2
  **/
  @ApiModelProperty(value = "")
  public String getDim2() {
    return dim2;
  }

  public void setDim2(String dim2) {
    this.dim2 = dim2;
  }

  public DkCloudDataModelCustomersTransactionModel dim3(String dim3) {
    this.dim3 = dim3;
    return this;
  }

   /**
   * Get dim3
   * @return dim3
  **/
  @ApiModelProperty(value = "")
  public String getDim3() {
    return dim3;
  }

  public void setDim3(String dim3) {
    this.dim3 = dim3;
  }

  public DkCloudDataModelCustomersTransactionModel journalDate(OffsetDateTime journalDate) {
    this.journalDate = journalDate;
    return this;
  }

   /**
   * Get journalDate
   * @return journalDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getJournalDate() {
    return journalDate;
  }

  public void setJournalDate(OffsetDateTime journalDate) {
    this.journalDate = journalDate;
  }

  public DkCloudDataModelCustomersTransactionModel dueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
    return this;
  }

   /**
   * Get dueDate
   * @return dueDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDueDate() {
    return dueDate;
  }

  public void setDueDate(OffsetDateTime dueDate) {
    this.dueDate = dueDate;
  }

  public DkCloudDataModelCustomersTransactionModel journalHeadCode(String journalHeadCode) {
    this.journalHeadCode = journalHeadCode;
    return this;
  }

   /**
   * Get journalHeadCode
   * @return journalHeadCode
  **/
  @ApiModelProperty(value = "")
  public String getJournalHeadCode() {
    return journalHeadCode;
  }

  public void setJournalHeadCode(String journalHeadCode) {
    this.journalHeadCode = journalHeadCode;
  }

  public DkCloudDataModelCustomersTransactionModel settledCurrencyAmount(Double settledCurrencyAmount) {
    this.settledCurrencyAmount = settledCurrencyAmount;
    return this;
  }

   /**
   * Get settledCurrencyAmount
   * @return settledCurrencyAmount
  **/
  @ApiModelProperty(value = "")
  public Double getSettledCurrencyAmount() {
    return settledCurrencyAmount;
  }

  public void setSettledCurrencyAmount(Double settledCurrencyAmount) {
    this.settledCurrencyAmount = settledCurrencyAmount;
  }

  public DkCloudDataModelCustomersTransactionModel settledAmount(Double settledAmount) {
    this.settledAmount = settledAmount;
    return this;
  }

   /**
   * Get settledAmount
   * @return settledAmount
  **/
  @ApiModelProperty(value = "")
  public Double getSettledAmount() {
    return settledAmount;
  }

  public void setSettledAmount(Double settledAmount) {
    this.settledAmount = settledAmount;
  }

   /**
   * Get settledStatus
   * @return settledStatus
  **/
  @ApiModelProperty(value = "")
  public Double getSettledStatus() {
    return settledStatus;
  }

   /**
   * Get settled
   * @return settled
  **/
  @ApiModelProperty(value = "")
  public Boolean isSettled() {
    return settled;
  }

  public DkCloudDataModelCustomersTransactionModel inputAmount(Double inputAmount) {
    this.inputAmount = inputAmount;
    return this;
  }

   /**
   * Get inputAmount
   * @return inputAmount
  **/
  @ApiModelProperty(value = "")
  public Double getInputAmount() {
    return inputAmount;
  }

  public void setInputAmount(Double inputAmount) {
    this.inputAmount = inputAmount;
  }

  public DkCloudDataModelCustomersTransactionModel currencyAmount(Double currencyAmount) {
    this.currencyAmount = currencyAmount;
    return this;
  }

   /**
   * Get currencyAmount
   * @return currencyAmount
  **/
  @ApiModelProperty(value = "")
  public Double getCurrencyAmount() {
    return currencyAmount;
  }

  public void setCurrencyAmount(Double currencyAmount) {
    this.currencyAmount = currencyAmount;
  }

  public DkCloudDataModelCustomersTransactionModel amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }

  public DkCloudDataModelCustomersTransactionModel currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public DkCloudDataModelCustomersTransactionModel exchange(Double exchange) {
    this.exchange = exchange;
    return this;
  }

   /**
   * Get exchange
   * @return exchange
  **/
  @ApiModelProperty(value = "")
  public Double getExchange() {
    return exchange;
  }

  public void setExchange(Double exchange) {
    this.exchange = exchange;
  }

  public DkCloudDataModelCustomersTransactionModel code(Integer code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @ApiModelProperty(value = "")
  public Integer getCode() {
    return code;
  }

  public void setCode(Integer code) {
    this.code = code;
  }

  public DkCloudDataModelCustomersTransactionModel voucher(String voucher) {
    this.voucher = voucher;
    return this;
  }

   /**
   * Get voucher
   * @return voucher
  **/
  @ApiModelProperty(value = "")
  public String getVoucher() {
    return voucher;
  }

  public void setVoucher(String voucher) {
    this.voucher = voucher;
  }

  public DkCloudDataModelCustomersTransactionModel origin(Integer origin) {
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @ApiModelProperty(value = "")
  public Integer getOrigin() {
    return origin;
  }

  public void setOrigin(Integer origin) {
    this.origin = origin;
  }

  public DkCloudDataModelCustomersTransactionModel claimStatus(Integer claimStatus) {
    this.claimStatus = claimStatus;
    return this;
  }

   /**
   * Get claimStatus
   * @return claimStatus
  **/
  @ApiModelProperty(value = "")
  public Integer getClaimStatus() {
    return claimStatus;
  }

  public void setClaimStatus(Integer claimStatus) {
    this.claimStatus = claimStatus;
  }

  public DkCloudDataModelCustomersTransactionModel recordType(RecordTypeEnum recordType) {
    this.recordType = recordType;
    return this;
  }

   /**
   * Get recordType
   * @return recordType
  **/
  @ApiModelProperty(value = "")
  public RecordTypeEnum getRecordType() {
    return recordType;
  }

  public void setRecordType(RecordTypeEnum recordType) {
    this.recordType = recordType;
  }

  public DkCloudDataModelCustomersTransactionModel journalType(JournalTypeEnum journalType) {
    this.journalType = journalType;
    return this;
  }

   /**
   * Get journalType
   * @return journalType
  **/
  @ApiModelProperty(value = "")
  public JournalTypeEnum getJournalType() {
    return journalType;
  }

  public void setJournalType(JournalTypeEnum journalType) {
    this.journalType = journalType;
  }

  public DkCloudDataModelCustomersTransactionModel settleId(Integer settleId) {
    this.settleId = settleId;
    return this;
  }

   /**
   * Get settleId
   * @return settleId
  **/
  @ApiModelProperty(value = "")
  public Integer getSettleId() {
    return settleId;
  }

  public void setSettleId(Integer settleId) {
    this.settleId = settleId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DkCloudDataModelCustomersTransactionModel dkCloudDataModelCustomersTransactionModel = (DkCloudDataModelCustomersTransactionModel) o;
    return Objects.equals(this.ID, dkCloudDataModelCustomersTransactionModel.ID) &&
        Objects.equals(this.invoiceNumber, dkCloudDataModelCustomersTransactionModel.invoiceNumber) &&
        Objects.equals(this.customer, dkCloudDataModelCustomersTransactionModel.customer) &&
        Objects.equals(this.created, dkCloudDataModelCustomersTransactionModel.created) &&
        Objects.equals(this.createdBy, dkCloudDataModelCustomersTransactionModel.createdBy) &&
        Objects.equals(this.modified, dkCloudDataModelCustomersTransactionModel.modified) &&
        Objects.equals(this.text, dkCloudDataModelCustomersTransactionModel.text) &&
        Objects.equals(this.reference, dkCloudDataModelCustomersTransactionModel.reference) &&
        Objects.equals(this.dim1, dkCloudDataModelCustomersTransactionModel.dim1) &&
        Objects.equals(this.dim2, dkCloudDataModelCustomersTransactionModel.dim2) &&
        Objects.equals(this.dim3, dkCloudDataModelCustomersTransactionModel.dim3) &&
        Objects.equals(this.journalDate, dkCloudDataModelCustomersTransactionModel.journalDate) &&
        Objects.equals(this.dueDate, dkCloudDataModelCustomersTransactionModel.dueDate) &&
        Objects.equals(this.journalHeadCode, dkCloudDataModelCustomersTransactionModel.journalHeadCode) &&
        Objects.equals(this.settledCurrencyAmount, dkCloudDataModelCustomersTransactionModel.settledCurrencyAmount) &&
        Objects.equals(this.settledAmount, dkCloudDataModelCustomersTransactionModel.settledAmount) &&
        Objects.equals(this.settledStatus, dkCloudDataModelCustomersTransactionModel.settledStatus) &&
        Objects.equals(this.settled, dkCloudDataModelCustomersTransactionModel.settled) &&
        Objects.equals(this.inputAmount, dkCloudDataModelCustomersTransactionModel.inputAmount) &&
        Objects.equals(this.currencyAmount, dkCloudDataModelCustomersTransactionModel.currencyAmount) &&
        Objects.equals(this.amount, dkCloudDataModelCustomersTransactionModel.amount) &&
        Objects.equals(this.currency, dkCloudDataModelCustomersTransactionModel.currency) &&
        Objects.equals(this.exchange, dkCloudDataModelCustomersTransactionModel.exchange) &&
        Objects.equals(this.code, dkCloudDataModelCustomersTransactionModel.code) &&
        Objects.equals(this.voucher, dkCloudDataModelCustomersTransactionModel.voucher) &&
        Objects.equals(this.origin, dkCloudDataModelCustomersTransactionModel.origin) &&
        Objects.equals(this.claimStatus, dkCloudDataModelCustomersTransactionModel.claimStatus) &&
        Objects.equals(this.recordType, dkCloudDataModelCustomersTransactionModel.recordType) &&
        Objects.equals(this.journalType, dkCloudDataModelCustomersTransactionModel.journalType) &&
        Objects.equals(this.settleId, dkCloudDataModelCustomersTransactionModel.settleId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ID, invoiceNumber, customer, created, createdBy, modified, text, reference, dim1, dim2, dim3, journalDate, dueDate, journalHeadCode, settledCurrencyAmount, settledAmount, settledStatus, settled, inputAmount, currencyAmount, amount, currency, exchange, code, voucher, origin, claimStatus, recordType, journalType, settleId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DkCloudDataModelCustomersTransactionModel {\n");
    
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    dim1: ").append(toIndentedString(dim1)).append("\n");
    sb.append("    dim2: ").append(toIndentedString(dim2)).append("\n");
    sb.append("    dim3: ").append(toIndentedString(dim3)).append("\n");
    sb.append("    journalDate: ").append(toIndentedString(journalDate)).append("\n");
    sb.append("    dueDate: ").append(toIndentedString(dueDate)).append("\n");
    sb.append("    journalHeadCode: ").append(toIndentedString(journalHeadCode)).append("\n");
    sb.append("    settledCurrencyAmount: ").append(toIndentedString(settledCurrencyAmount)).append("\n");
    sb.append("    settledAmount: ").append(toIndentedString(settledAmount)).append("\n");
    sb.append("    settledStatus: ").append(toIndentedString(settledStatus)).append("\n");
    sb.append("    settled: ").append(toIndentedString(settled)).append("\n");
    sb.append("    inputAmount: ").append(toIndentedString(inputAmount)).append("\n");
    sb.append("    currencyAmount: ").append(toIndentedString(currencyAmount)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    voucher: ").append(toIndentedString(voucher)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    claimStatus: ").append(toIndentedString(claimStatus)).append("\n");
    sb.append("    recordType: ").append(toIndentedString(recordType)).append("\n");
    sb.append("    journalType: ").append(toIndentedString(journalType)).append("\n");
    sb.append("    settleId: ").append(toIndentedString(settleId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * dkPlus.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.DkCloudDataModelGeneralAttachmentModel;
import io.swagger.client.model.DkCloudDataModelGeneralChangesModel;
import io.swagger.client.model.DkCloudDataModelProductsAlternativeProductModel;
import io.swagger.client.model.DkCloudDataModelProductsBarcodesModel;
import io.swagger.client.model.DkCloudDataModelProductsCategoriesModel;
import io.swagger.client.model.DkCloudDataModelProductsCurrencyPriceModel;
import io.swagger.client.model.DkCloudDataModelProductsProductMemo;
import io.swagger.client.model.DkCloudDataModelProductsProductUnitModel;
import io.swagger.client.model.DkCloudDataModelProductsProductVendor;
import io.swagger.client.model.DkCloudDataModelProductsProductWarehouseModel;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * DkCloudDataModelProductsProductModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-12T12:57:09.866Z")



public class DkCloudDataModelProductsProductModel {
  @SerializedName("ObjectDate")
  private OffsetDateTime objectDate = null;

  @SerializedName("RecordID")
  private Integer recordID = null;

  @SerializedName("ItemCode")
  private String itemCode = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Description2")
  private String description2 = null;

  @SerializedName("Inactive")
  private Boolean inactive = null;

  @SerializedName("RecordCreated")
  private OffsetDateTime recordCreated = null;

  @SerializedName("RecordModified")
  private OffsetDateTime recordModified = null;

  @SerializedName("AliasItemCode")
  private String aliasItemCode = null;

  @SerializedName("ItemClass")
  private Integer itemClass = null;

  @SerializedName("UnitCode")
  private String unitCode = null;

  @SerializedName("Group")
  private String group = null;

  @SerializedName("UnitQuantity")
  private Double unitQuantity = null;

  @SerializedName("NetWeight")
  private Double netWeight = null;

  @SerializedName("UnitVolume")
  private Double unitVolume = null;

  @SerializedName("TotalQuantityInWarehouse")
  private Double totalQuantityInWarehouse = null;

  @SerializedName("PurchasePrice")
  private Double purchasePrice = null;

  @SerializedName("CurrencyCode")
  private String currencyCode = null;

  @SerializedName("Exchange")
  private Double exchange = null;

  @SerializedName("UnitPrice1")
  private Double unitPrice1 = null;

  @SerializedName("Purchasefactor")
  private Double purchasefactor = null;

  @SerializedName("CostPrice")
  private Double costPrice = null;

  @SerializedName("ProfitRatio1")
  private Double profitRatio1 = null;

  @SerializedName("UnitPrice1WithTax")
  private Double unitPrice1WithTax = null;

  @SerializedName("UnitPrice2")
  private Double unitPrice2 = null;

  @SerializedName("UnitPrice3WithTax")
  private Double unitPrice3WithTax = null;

  @SerializedName("ShowItemInWebShop")
  private Boolean showItemInWebShop = null;

  @SerializedName("AllowDiscount")
  private Boolean allowDiscount = null;

  @SerializedName("Discount")
  private Double discount = null;

  @SerializedName("UnitPrice2WithTax")
  private Double unitPrice2WithTax = null;

  @SerializedName("UnitPrice3")
  private Double unitPrice3 = null;

  @SerializedName("PropositionPrice")
  private Double propositionPrice = null;

  @SerializedName("PropositionDateTo")
  private OffsetDateTime propositionDateTo = null;

  @SerializedName("ExtraDesc1")
  private String extraDesc1 = null;

  @SerializedName("ExtraDesc2")
  private String extraDesc2 = null;

  @SerializedName("IsVariation")
  private Boolean isVariation = null;

  @SerializedName("TaxPercent")
  private Double taxPercent = null;

  @SerializedName("SalesTaxCode")
  private String salesTaxCode = null;

  @SerializedName("SalesLedgerCode")
  private String salesLedgerCode = null;

  @SerializedName("PurchaseTaxCode")
  private String purchaseTaxCode = null;

  @SerializedName("PurchaseLedgerCode")
  private String purchaseLedgerCode = null;

  @SerializedName("AllowNegativeInventiry")
  private Boolean allowNegativeInventiry = null;

  @SerializedName("DiscountQuantity")
  private Double discountQuantity = null;

  @SerializedName("MaxDiscountAllowed")
  private Double maxDiscountAllowed = null;

  @SerializedName("DefaultSaleQuantity")
  private Double defaultSaleQuantity = null;

  @SerializedName("ExtraFeeItemCode")
  private String extraFeeItemCode = null;

  /**
   * Gets or Sets costMethod
   */
  @JsonAdapter(CostMethodEnum.Adapter.class)
  public enum CostMethodEnum {
    NONE("None"),
    
    AVERAGE("Average"),
    
    FIFO("FIFO"),
    
    LIFO("LIFO");

    private String value;

    CostMethodEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CostMethodEnum fromValue(String text) {
      for (CostMethodEnum b : CostMethodEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<CostMethodEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CostMethodEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CostMethodEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return CostMethodEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("CostMethod")
  private CostMethodEnum costMethod = null;

  @SerializedName("Dim1")
  private String dim1 = null;

  @SerializedName("Dim2")
  private String dim2 = null;

  @SerializedName("Dim3")
  private String dim3 = null;

  @SerializedName("Deleted")
  private Boolean deleted = null;

  @SerializedName("HasAttachments")
  private Boolean hasAttachments = null;

  @SerializedName("HasBarcodes")
  private Boolean hasBarcodes = null;

  @SerializedName("HasCurrencyPrices")
  private Boolean hasCurrencyPrices = null;

  @SerializedName("HasUnits")
  private Boolean hasUnits = null;

  @SerializedName("HasAlternative")
  private Boolean hasAlternative = null;

  @SerializedName("Barcodes")
  private List<DkCloudDataModelProductsBarcodesModel> barcodes = null;

  @SerializedName("Attachments")
  private List<DkCloudDataModelGeneralAttachmentModel> attachments = null;

  @SerializedName("Categories")
  private List<DkCloudDataModelProductsCategoriesModel> categories = null;

  @SerializedName("Warehouses")
  private List<DkCloudDataModelProductsProductWarehouseModel> warehouses = null;

  @SerializedName("CurrencyPrices")
  private List<DkCloudDataModelProductsCurrencyPriceModel> currencyPrices = null;

  @SerializedName("Units")
  private List<DkCloudDataModelProductsProductUnitModel> units = null;

  @SerializedName("Alternative")
  private List<DkCloudDataModelProductsAlternativeProductModel> alternative = null;

  @SerializedName("Changes")
  private List<DkCloudDataModelGeneralChangesModel> changes = null;

  @SerializedName("Memos")
  private List<DkCloudDataModelProductsProductMemo> memos = null;

  @SerializedName("Vendors")
  private List<DkCloudDataModelProductsProductVendor> vendors = null;

  public DkCloudDataModelProductsProductModel objectDate(OffsetDateTime objectDate) {
    this.objectDate = objectDate;
    return this;
  }

   /**
   * Get objectDate
   * @return objectDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getObjectDate() {
    return objectDate;
  }

  public void setObjectDate(OffsetDateTime objectDate) {
    this.objectDate = objectDate;
  }

  public DkCloudDataModelProductsProductModel recordID(Integer recordID) {
    this.recordID = recordID;
    return this;
  }

   /**
   * Get recordID
   * @return recordID
  **/
  @ApiModelProperty(value = "")
  public Integer getRecordID() {
    return recordID;
  }

  public void setRecordID(Integer recordID) {
    this.recordID = recordID;
  }

  public DkCloudDataModelProductsProductModel itemCode(String itemCode) {
    this.itemCode = itemCode;
    return this;
  }

   /**
   * Get itemCode
   * @return itemCode
  **/
  @ApiModelProperty(required = true, value = "")
  public String getItemCode() {
    return itemCode;
  }

  public void setItemCode(String itemCode) {
    this.itemCode = itemCode;
  }

  public DkCloudDataModelProductsProductModel description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DkCloudDataModelProductsProductModel description2(String description2) {
    this.description2 = description2;
    return this;
  }

   /**
   * Get description2
   * @return description2
  **/
  @ApiModelProperty(value = "")
  public String getDescription2() {
    return description2;
  }

  public void setDescription2(String description2) {
    this.description2 = description2;
  }

  public DkCloudDataModelProductsProductModel inactive(Boolean inactive) {
    this.inactive = inactive;
    return this;
  }

   /**
   * Get inactive
   * @return inactive
  **/
  @ApiModelProperty(value = "")
  public Boolean isInactive() {
    return inactive;
  }

  public void setInactive(Boolean inactive) {
    this.inactive = inactive;
  }

  public DkCloudDataModelProductsProductModel recordCreated(OffsetDateTime recordCreated) {
    this.recordCreated = recordCreated;
    return this;
  }

   /**
   * Get recordCreated
   * @return recordCreated
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getRecordCreated() {
    return recordCreated;
  }

  public void setRecordCreated(OffsetDateTime recordCreated) {
    this.recordCreated = recordCreated;
  }

  public DkCloudDataModelProductsProductModel recordModified(OffsetDateTime recordModified) {
    this.recordModified = recordModified;
    return this;
  }

   /**
   * Get recordModified
   * @return recordModified
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getRecordModified() {
    return recordModified;
  }

  public void setRecordModified(OffsetDateTime recordModified) {
    this.recordModified = recordModified;
  }

  public DkCloudDataModelProductsProductModel aliasItemCode(String aliasItemCode) {
    this.aliasItemCode = aliasItemCode;
    return this;
  }

   /**
   * Get aliasItemCode
   * @return aliasItemCode
  **/
  @ApiModelProperty(value = "")
  public String getAliasItemCode() {
    return aliasItemCode;
  }

  public void setAliasItemCode(String aliasItemCode) {
    this.aliasItemCode = aliasItemCode;
  }

  public DkCloudDataModelProductsProductModel itemClass(Integer itemClass) {
    this.itemClass = itemClass;
    return this;
  }

   /**
   * Get itemClass
   * @return itemClass
  **/
  @ApiModelProperty(value = "")
  public Integer getItemClass() {
    return itemClass;
  }

  public void setItemClass(Integer itemClass) {
    this.itemClass = itemClass;
  }

  public DkCloudDataModelProductsProductModel unitCode(String unitCode) {
    this.unitCode = unitCode;
    return this;
  }

   /**
   * Get unitCode
   * @return unitCode
  **/
  @ApiModelProperty(value = "")
  public String getUnitCode() {
    return unitCode;
  }

  public void setUnitCode(String unitCode) {
    this.unitCode = unitCode;
  }

  public DkCloudDataModelProductsProductModel group(String group) {
    this.group = group;
    return this;
  }

   /**
   * Get group
   * @return group
  **/
  @ApiModelProperty(value = "")
  public String getGroup() {
    return group;
  }

  public void setGroup(String group) {
    this.group = group;
  }

  public DkCloudDataModelProductsProductModel unitQuantity(Double unitQuantity) {
    this.unitQuantity = unitQuantity;
    return this;
  }

   /**
   * Get unitQuantity
   * @return unitQuantity
  **/
  @ApiModelProperty(value = "")
  public Double getUnitQuantity() {
    return unitQuantity;
  }

  public void setUnitQuantity(Double unitQuantity) {
    this.unitQuantity = unitQuantity;
  }

  public DkCloudDataModelProductsProductModel netWeight(Double netWeight) {
    this.netWeight = netWeight;
    return this;
  }

   /**
   * Get netWeight
   * @return netWeight
  **/
  @ApiModelProperty(value = "")
  public Double getNetWeight() {
    return netWeight;
  }

  public void setNetWeight(Double netWeight) {
    this.netWeight = netWeight;
  }

  public DkCloudDataModelProductsProductModel unitVolume(Double unitVolume) {
    this.unitVolume = unitVolume;
    return this;
  }

   /**
   * Get unitVolume
   * @return unitVolume
  **/
  @ApiModelProperty(value = "")
  public Double getUnitVolume() {
    return unitVolume;
  }

  public void setUnitVolume(Double unitVolume) {
    this.unitVolume = unitVolume;
  }

  public DkCloudDataModelProductsProductModel totalQuantityInWarehouse(Double totalQuantityInWarehouse) {
    this.totalQuantityInWarehouse = totalQuantityInWarehouse;
    return this;
  }

   /**
   * Get totalQuantityInWarehouse
   * @return totalQuantityInWarehouse
  **/
  @ApiModelProperty(value = "")
  public Double getTotalQuantityInWarehouse() {
    return totalQuantityInWarehouse;
  }

  public void setTotalQuantityInWarehouse(Double totalQuantityInWarehouse) {
    this.totalQuantityInWarehouse = totalQuantityInWarehouse;
  }

  public DkCloudDataModelProductsProductModel purchasePrice(Double purchasePrice) {
    this.purchasePrice = purchasePrice;
    return this;
  }

   /**
   * Get purchasePrice
   * @return purchasePrice
  **/
  @ApiModelProperty(value = "")
  public Double getPurchasePrice() {
    return purchasePrice;
  }

  public void setPurchasePrice(Double purchasePrice) {
    this.purchasePrice = purchasePrice;
  }

  public DkCloudDataModelProductsProductModel currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @ApiModelProperty(value = "")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public DkCloudDataModelProductsProductModel exchange(Double exchange) {
    this.exchange = exchange;
    return this;
  }

   /**
   * Get exchange
   * @return exchange
  **/
  @ApiModelProperty(value = "")
  public Double getExchange() {
    return exchange;
  }

  public void setExchange(Double exchange) {
    this.exchange = exchange;
  }

  public DkCloudDataModelProductsProductModel unitPrice1(Double unitPrice1) {
    this.unitPrice1 = unitPrice1;
    return this;
  }

   /**
   * Get unitPrice1
   * @return unitPrice1
  **/
  @ApiModelProperty(value = "")
  public Double getUnitPrice1() {
    return unitPrice1;
  }

  public void setUnitPrice1(Double unitPrice1) {
    this.unitPrice1 = unitPrice1;
  }

  public DkCloudDataModelProductsProductModel purchasefactor(Double purchasefactor) {
    this.purchasefactor = purchasefactor;
    return this;
  }

   /**
   * Get purchasefactor
   * @return purchasefactor
  **/
  @ApiModelProperty(value = "")
  public Double getPurchasefactor() {
    return purchasefactor;
  }

  public void setPurchasefactor(Double purchasefactor) {
    this.purchasefactor = purchasefactor;
  }

  public DkCloudDataModelProductsProductModel costPrice(Double costPrice) {
    this.costPrice = costPrice;
    return this;
  }

   /**
   * Get costPrice
   * @return costPrice
  **/
  @ApiModelProperty(value = "")
  public Double getCostPrice() {
    return costPrice;
  }

  public void setCostPrice(Double costPrice) {
    this.costPrice = costPrice;
  }

  public DkCloudDataModelProductsProductModel profitRatio1(Double profitRatio1) {
    this.profitRatio1 = profitRatio1;
    return this;
  }

   /**
   * Get profitRatio1
   * @return profitRatio1
  **/
  @ApiModelProperty(value = "")
  public Double getProfitRatio1() {
    return profitRatio1;
  }

  public void setProfitRatio1(Double profitRatio1) {
    this.profitRatio1 = profitRatio1;
  }

  public DkCloudDataModelProductsProductModel unitPrice1WithTax(Double unitPrice1WithTax) {
    this.unitPrice1WithTax = unitPrice1WithTax;
    return this;
  }

   /**
   * Get unitPrice1WithTax
   * @return unitPrice1WithTax
  **/
  @ApiModelProperty(value = "")
  public Double getUnitPrice1WithTax() {
    return unitPrice1WithTax;
  }

  public void setUnitPrice1WithTax(Double unitPrice1WithTax) {
    this.unitPrice1WithTax = unitPrice1WithTax;
  }

  public DkCloudDataModelProductsProductModel unitPrice2(Double unitPrice2) {
    this.unitPrice2 = unitPrice2;
    return this;
  }

   /**
   * Get unitPrice2
   * @return unitPrice2
  **/
  @ApiModelProperty(value = "")
  public Double getUnitPrice2() {
    return unitPrice2;
  }

  public void setUnitPrice2(Double unitPrice2) {
    this.unitPrice2 = unitPrice2;
  }

  public DkCloudDataModelProductsProductModel unitPrice3WithTax(Double unitPrice3WithTax) {
    this.unitPrice3WithTax = unitPrice3WithTax;
    return this;
  }

   /**
   * Get unitPrice3WithTax
   * @return unitPrice3WithTax
  **/
  @ApiModelProperty(value = "")
  public Double getUnitPrice3WithTax() {
    return unitPrice3WithTax;
  }

  public void setUnitPrice3WithTax(Double unitPrice3WithTax) {
    this.unitPrice3WithTax = unitPrice3WithTax;
  }

  public DkCloudDataModelProductsProductModel showItemInWebShop(Boolean showItemInWebShop) {
    this.showItemInWebShop = showItemInWebShop;
    return this;
  }

   /**
   * Get showItemInWebShop
   * @return showItemInWebShop
  **/
  @ApiModelProperty(value = "")
  public Boolean isShowItemInWebShop() {
    return showItemInWebShop;
  }

  public void setShowItemInWebShop(Boolean showItemInWebShop) {
    this.showItemInWebShop = showItemInWebShop;
  }

  public DkCloudDataModelProductsProductModel allowDiscount(Boolean allowDiscount) {
    this.allowDiscount = allowDiscount;
    return this;
  }

   /**
   * Get allowDiscount
   * @return allowDiscount
  **/
  @ApiModelProperty(value = "")
  public Boolean isAllowDiscount() {
    return allowDiscount;
  }

  public void setAllowDiscount(Boolean allowDiscount) {
    this.allowDiscount = allowDiscount;
  }

  public DkCloudDataModelProductsProductModel discount(Double discount) {
    this.discount = discount;
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @ApiModelProperty(value = "")
  public Double getDiscount() {
    return discount;
  }

  public void setDiscount(Double discount) {
    this.discount = discount;
  }

  public DkCloudDataModelProductsProductModel unitPrice2WithTax(Double unitPrice2WithTax) {
    this.unitPrice2WithTax = unitPrice2WithTax;
    return this;
  }

   /**
   * Get unitPrice2WithTax
   * @return unitPrice2WithTax
  **/
  @ApiModelProperty(value = "")
  public Double getUnitPrice2WithTax() {
    return unitPrice2WithTax;
  }

  public void setUnitPrice2WithTax(Double unitPrice2WithTax) {
    this.unitPrice2WithTax = unitPrice2WithTax;
  }

  public DkCloudDataModelProductsProductModel unitPrice3(Double unitPrice3) {
    this.unitPrice3 = unitPrice3;
    return this;
  }

   /**
   * Get unitPrice3
   * @return unitPrice3
  **/
  @ApiModelProperty(value = "")
  public Double getUnitPrice3() {
    return unitPrice3;
  }

  public void setUnitPrice3(Double unitPrice3) {
    this.unitPrice3 = unitPrice3;
  }

  public DkCloudDataModelProductsProductModel propositionPrice(Double propositionPrice) {
    this.propositionPrice = propositionPrice;
    return this;
  }

   /**
   * Get propositionPrice
   * @return propositionPrice
  **/
  @ApiModelProperty(value = "")
  public Double getPropositionPrice() {
    return propositionPrice;
  }

  public void setPropositionPrice(Double propositionPrice) {
    this.propositionPrice = propositionPrice;
  }

  public DkCloudDataModelProductsProductModel propositionDateTo(OffsetDateTime propositionDateTo) {
    this.propositionDateTo = propositionDateTo;
    return this;
  }

   /**
   * Get propositionDateTo
   * @return propositionDateTo
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getPropositionDateTo() {
    return propositionDateTo;
  }

  public void setPropositionDateTo(OffsetDateTime propositionDateTo) {
    this.propositionDateTo = propositionDateTo;
  }

  public DkCloudDataModelProductsProductModel extraDesc1(String extraDesc1) {
    this.extraDesc1 = extraDesc1;
    return this;
  }

   /**
   * Get extraDesc1
   * @return extraDesc1
  **/
  @ApiModelProperty(value = "")
  public String getExtraDesc1() {
    return extraDesc1;
  }

  public void setExtraDesc1(String extraDesc1) {
    this.extraDesc1 = extraDesc1;
  }

  public DkCloudDataModelProductsProductModel extraDesc2(String extraDesc2) {
    this.extraDesc2 = extraDesc2;
    return this;
  }

   /**
   * Get extraDesc2
   * @return extraDesc2
  **/
  @ApiModelProperty(value = "")
  public String getExtraDesc2() {
    return extraDesc2;
  }

  public void setExtraDesc2(String extraDesc2) {
    this.extraDesc2 = extraDesc2;
  }

  public DkCloudDataModelProductsProductModel isVariation(Boolean isVariation) {
    this.isVariation = isVariation;
    return this;
  }

   /**
   * Get isVariation
   * @return isVariation
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsVariation() {
    return isVariation;
  }

  public void setIsVariation(Boolean isVariation) {
    this.isVariation = isVariation;
  }

  public DkCloudDataModelProductsProductModel taxPercent(Double taxPercent) {
    this.taxPercent = taxPercent;
    return this;
  }

   /**
   * Get taxPercent
   * @return taxPercent
  **/
  @ApiModelProperty(value = "")
  public Double getTaxPercent() {
    return taxPercent;
  }

  public void setTaxPercent(Double taxPercent) {
    this.taxPercent = taxPercent;
  }

  public DkCloudDataModelProductsProductModel salesTaxCode(String salesTaxCode) {
    this.salesTaxCode = salesTaxCode;
    return this;
  }

   /**
   * Get salesTaxCode
   * @return salesTaxCode
  **/
  @ApiModelProperty(value = "")
  public String getSalesTaxCode() {
    return salesTaxCode;
  }

  public void setSalesTaxCode(String salesTaxCode) {
    this.salesTaxCode = salesTaxCode;
  }

  public DkCloudDataModelProductsProductModel salesLedgerCode(String salesLedgerCode) {
    this.salesLedgerCode = salesLedgerCode;
    return this;
  }

   /**
   * Get salesLedgerCode
   * @return salesLedgerCode
  **/
  @ApiModelProperty(value = "")
  public String getSalesLedgerCode() {
    return salesLedgerCode;
  }

  public void setSalesLedgerCode(String salesLedgerCode) {
    this.salesLedgerCode = salesLedgerCode;
  }

  public DkCloudDataModelProductsProductModel purchaseTaxCode(String purchaseTaxCode) {
    this.purchaseTaxCode = purchaseTaxCode;
    return this;
  }

   /**
   * Get purchaseTaxCode
   * @return purchaseTaxCode
  **/
  @ApiModelProperty(value = "")
  public String getPurchaseTaxCode() {
    return purchaseTaxCode;
  }

  public void setPurchaseTaxCode(String purchaseTaxCode) {
    this.purchaseTaxCode = purchaseTaxCode;
  }

  public DkCloudDataModelProductsProductModel purchaseLedgerCode(String purchaseLedgerCode) {
    this.purchaseLedgerCode = purchaseLedgerCode;
    return this;
  }

   /**
   * Get purchaseLedgerCode
   * @return purchaseLedgerCode
  **/
  @ApiModelProperty(value = "")
  public String getPurchaseLedgerCode() {
    return purchaseLedgerCode;
  }

  public void setPurchaseLedgerCode(String purchaseLedgerCode) {
    this.purchaseLedgerCode = purchaseLedgerCode;
  }

  public DkCloudDataModelProductsProductModel allowNegativeInventiry(Boolean allowNegativeInventiry) {
    this.allowNegativeInventiry = allowNegativeInventiry;
    return this;
  }

   /**
   * Get allowNegativeInventiry
   * @return allowNegativeInventiry
  **/
  @ApiModelProperty(value = "")
  public Boolean isAllowNegativeInventiry() {
    return allowNegativeInventiry;
  }

  public void setAllowNegativeInventiry(Boolean allowNegativeInventiry) {
    this.allowNegativeInventiry = allowNegativeInventiry;
  }

  public DkCloudDataModelProductsProductModel discountQuantity(Double discountQuantity) {
    this.discountQuantity = discountQuantity;
    return this;
  }

   /**
   * Get discountQuantity
   * @return discountQuantity
  **/
  @ApiModelProperty(value = "")
  public Double getDiscountQuantity() {
    return discountQuantity;
  }

  public void setDiscountQuantity(Double discountQuantity) {
    this.discountQuantity = discountQuantity;
  }

  public DkCloudDataModelProductsProductModel maxDiscountAllowed(Double maxDiscountAllowed) {
    this.maxDiscountAllowed = maxDiscountAllowed;
    return this;
  }

   /**
   * Get maxDiscountAllowed
   * @return maxDiscountAllowed
  **/
  @ApiModelProperty(value = "")
  public Double getMaxDiscountAllowed() {
    return maxDiscountAllowed;
  }

  public void setMaxDiscountAllowed(Double maxDiscountAllowed) {
    this.maxDiscountAllowed = maxDiscountAllowed;
  }

  public DkCloudDataModelProductsProductModel defaultSaleQuantity(Double defaultSaleQuantity) {
    this.defaultSaleQuantity = defaultSaleQuantity;
    return this;
  }

   /**
   * Get defaultSaleQuantity
   * @return defaultSaleQuantity
  **/
  @ApiModelProperty(value = "")
  public Double getDefaultSaleQuantity() {
    return defaultSaleQuantity;
  }

  public void setDefaultSaleQuantity(Double defaultSaleQuantity) {
    this.defaultSaleQuantity = defaultSaleQuantity;
  }

  public DkCloudDataModelProductsProductModel extraFeeItemCode(String extraFeeItemCode) {
    this.extraFeeItemCode = extraFeeItemCode;
    return this;
  }

   /**
   * Get extraFeeItemCode
   * @return extraFeeItemCode
  **/
  @ApiModelProperty(value = "")
  public String getExtraFeeItemCode() {
    return extraFeeItemCode;
  }

  public void setExtraFeeItemCode(String extraFeeItemCode) {
    this.extraFeeItemCode = extraFeeItemCode;
  }

  public DkCloudDataModelProductsProductModel costMethod(CostMethodEnum costMethod) {
    this.costMethod = costMethod;
    return this;
  }

   /**
   * Get costMethod
   * @return costMethod
  **/
  @ApiModelProperty(value = "")
  public CostMethodEnum getCostMethod() {
    return costMethod;
  }

  public void setCostMethod(CostMethodEnum costMethod) {
    this.costMethod = costMethod;
  }

  public DkCloudDataModelProductsProductModel dim1(String dim1) {
    this.dim1 = dim1;
    return this;
  }

   /**
   * Get dim1
   * @return dim1
  **/
  @ApiModelProperty(value = "")
  public String getDim1() {
    return dim1;
  }

  public void setDim1(String dim1) {
    this.dim1 = dim1;
  }

  public DkCloudDataModelProductsProductModel dim2(String dim2) {
    this.dim2 = dim2;
    return this;
  }

   /**
   * Get dim2
   * @return dim2
  **/
  @ApiModelProperty(value = "")
  public String getDim2() {
    return dim2;
  }

  public void setDim2(String dim2) {
    this.dim2 = dim2;
  }

  public DkCloudDataModelProductsProductModel dim3(String dim3) {
    this.dim3 = dim3;
    return this;
  }

   /**
   * Get dim3
   * @return dim3
  **/
  @ApiModelProperty(value = "")
  public String getDim3() {
    return dim3;
  }

  public void setDim3(String dim3) {
    this.dim3 = dim3;
  }

  public DkCloudDataModelProductsProductModel deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

   /**
   * Get deleted
   * @return deleted
  **/
  @ApiModelProperty(value = "")
  public Boolean isDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }

   /**
   * Get hasAttachments
   * @return hasAttachments
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasAttachments() {
    return hasAttachments;
  }

   /**
   * Get hasBarcodes
   * @return hasBarcodes
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasBarcodes() {
    return hasBarcodes;
  }

   /**
   * Get hasCurrencyPrices
   * @return hasCurrencyPrices
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasCurrencyPrices() {
    return hasCurrencyPrices;
  }

   /**
   * Get hasUnits
   * @return hasUnits
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasUnits() {
    return hasUnits;
  }

   /**
   * Get hasAlternative
   * @return hasAlternative
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasAlternative() {
    return hasAlternative;
  }

  public DkCloudDataModelProductsProductModel barcodes(List<DkCloudDataModelProductsBarcodesModel> barcodes) {
    this.barcodes = barcodes;
    return this;
  }

  public DkCloudDataModelProductsProductModel addBarcodesItem(DkCloudDataModelProductsBarcodesModel barcodesItem) {
    if (this.barcodes == null) {
      this.barcodes = new ArrayList<DkCloudDataModelProductsBarcodesModel>();
    }
    this.barcodes.add(barcodesItem);
    return this;
  }

   /**
   * Get barcodes
   * @return barcodes
  **/
  @ApiModelProperty(value = "")
  public List<DkCloudDataModelProductsBarcodesModel> getBarcodes() {
    return barcodes;
  }

  public void setBarcodes(List<DkCloudDataModelProductsBarcodesModel> barcodes) {
    this.barcodes = barcodes;
  }

  public DkCloudDataModelProductsProductModel attachments(List<DkCloudDataModelGeneralAttachmentModel> attachments) {
    this.attachments = attachments;
    return this;
  }

  public DkCloudDataModelProductsProductModel addAttachmentsItem(DkCloudDataModelGeneralAttachmentModel attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<DkCloudDataModelGeneralAttachmentModel>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @ApiModelProperty(value = "")
  public List<DkCloudDataModelGeneralAttachmentModel> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<DkCloudDataModelGeneralAttachmentModel> attachments) {
    this.attachments = attachments;
  }

  public DkCloudDataModelProductsProductModel categories(List<DkCloudDataModelProductsCategoriesModel> categories) {
    this.categories = categories;
    return this;
  }

  public DkCloudDataModelProductsProductModel addCategoriesItem(DkCloudDataModelProductsCategoriesModel categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<DkCloudDataModelProductsCategoriesModel>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Get categories
   * @return categories
  **/
  @ApiModelProperty(value = "")
  public List<DkCloudDataModelProductsCategoriesModel> getCategories() {
    return categories;
  }

  public void setCategories(List<DkCloudDataModelProductsCategoriesModel> categories) {
    this.categories = categories;
  }

  public DkCloudDataModelProductsProductModel warehouses(List<DkCloudDataModelProductsProductWarehouseModel> warehouses) {
    this.warehouses = warehouses;
    return this;
  }

  public DkCloudDataModelProductsProductModel addWarehousesItem(DkCloudDataModelProductsProductWarehouseModel warehousesItem) {
    if (this.warehouses == null) {
      this.warehouses = new ArrayList<DkCloudDataModelProductsProductWarehouseModel>();
    }
    this.warehouses.add(warehousesItem);
    return this;
  }

   /**
   * Get warehouses
   * @return warehouses
  **/
  @ApiModelProperty(value = "")
  public List<DkCloudDataModelProductsProductWarehouseModel> getWarehouses() {
    return warehouses;
  }

  public void setWarehouses(List<DkCloudDataModelProductsProductWarehouseModel> warehouses) {
    this.warehouses = warehouses;
  }

  public DkCloudDataModelProductsProductModel currencyPrices(List<DkCloudDataModelProductsCurrencyPriceModel> currencyPrices) {
    this.currencyPrices = currencyPrices;
    return this;
  }

  public DkCloudDataModelProductsProductModel addCurrencyPricesItem(DkCloudDataModelProductsCurrencyPriceModel currencyPricesItem) {
    if (this.currencyPrices == null) {
      this.currencyPrices = new ArrayList<DkCloudDataModelProductsCurrencyPriceModel>();
    }
    this.currencyPrices.add(currencyPricesItem);
    return this;
  }

   /**
   * Get currencyPrices
   * @return currencyPrices
  **/
  @ApiModelProperty(value = "")
  public List<DkCloudDataModelProductsCurrencyPriceModel> getCurrencyPrices() {
    return currencyPrices;
  }

  public void setCurrencyPrices(List<DkCloudDataModelProductsCurrencyPriceModel> currencyPrices) {
    this.currencyPrices = currencyPrices;
  }

  public DkCloudDataModelProductsProductModel units(List<DkCloudDataModelProductsProductUnitModel> units) {
    this.units = units;
    return this;
  }

  public DkCloudDataModelProductsProductModel addUnitsItem(DkCloudDataModelProductsProductUnitModel unitsItem) {
    if (this.units == null) {
      this.units = new ArrayList<DkCloudDataModelProductsProductUnitModel>();
    }
    this.units.add(unitsItem);
    return this;
  }

   /**
   * Get units
   * @return units
  **/
  @ApiModelProperty(value = "")
  public List<DkCloudDataModelProductsProductUnitModel> getUnits() {
    return units;
  }

  public void setUnits(List<DkCloudDataModelProductsProductUnitModel> units) {
    this.units = units;
  }

  public DkCloudDataModelProductsProductModel alternative(List<DkCloudDataModelProductsAlternativeProductModel> alternative) {
    this.alternative = alternative;
    return this;
  }

  public DkCloudDataModelProductsProductModel addAlternativeItem(DkCloudDataModelProductsAlternativeProductModel alternativeItem) {
    if (this.alternative == null) {
      this.alternative = new ArrayList<DkCloudDataModelProductsAlternativeProductModel>();
    }
    this.alternative.add(alternativeItem);
    return this;
  }

   /**
   * Get alternative
   * @return alternative
  **/
  @ApiModelProperty(value = "")
  public List<DkCloudDataModelProductsAlternativeProductModel> getAlternative() {
    return alternative;
  }

  public void setAlternative(List<DkCloudDataModelProductsAlternativeProductModel> alternative) {
    this.alternative = alternative;
  }

  public DkCloudDataModelProductsProductModel changes(List<DkCloudDataModelGeneralChangesModel> changes) {
    this.changes = changes;
    return this;
  }

  public DkCloudDataModelProductsProductModel addChangesItem(DkCloudDataModelGeneralChangesModel changesItem) {
    if (this.changes == null) {
      this.changes = new ArrayList<DkCloudDataModelGeneralChangesModel>();
    }
    this.changes.add(changesItem);
    return this;
  }

   /**
   * Get changes
   * @return changes
  **/
  @ApiModelProperty(value = "")
  public List<DkCloudDataModelGeneralChangesModel> getChanges() {
    return changes;
  }

  public void setChanges(List<DkCloudDataModelGeneralChangesModel> changes) {
    this.changes = changes;
  }

  public DkCloudDataModelProductsProductModel memos(List<DkCloudDataModelProductsProductMemo> memos) {
    this.memos = memos;
    return this;
  }

  public DkCloudDataModelProductsProductModel addMemosItem(DkCloudDataModelProductsProductMemo memosItem) {
    if (this.memos == null) {
      this.memos = new ArrayList<DkCloudDataModelProductsProductMemo>();
    }
    this.memos.add(memosItem);
    return this;
  }

   /**
   * Get memos
   * @return memos
  **/
  @ApiModelProperty(value = "")
  public List<DkCloudDataModelProductsProductMemo> getMemos() {
    return memos;
  }

  public void setMemos(List<DkCloudDataModelProductsProductMemo> memos) {
    this.memos = memos;
  }

  public DkCloudDataModelProductsProductModel vendors(List<DkCloudDataModelProductsProductVendor> vendors) {
    this.vendors = vendors;
    return this;
  }

  public DkCloudDataModelProductsProductModel addVendorsItem(DkCloudDataModelProductsProductVendor vendorsItem) {
    if (this.vendors == null) {
      this.vendors = new ArrayList<DkCloudDataModelProductsProductVendor>();
    }
    this.vendors.add(vendorsItem);
    return this;
  }

   /**
   * Get vendors
   * @return vendors
  **/
  @ApiModelProperty(value = "")
  public List<DkCloudDataModelProductsProductVendor> getVendors() {
    return vendors;
  }

  public void setVendors(List<DkCloudDataModelProductsProductVendor> vendors) {
    this.vendors = vendors;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DkCloudDataModelProductsProductModel dkCloudDataModelProductsProductModel = (DkCloudDataModelProductsProductModel) o;
    return Objects.equals(this.objectDate, dkCloudDataModelProductsProductModel.objectDate) &&
        Objects.equals(this.recordID, dkCloudDataModelProductsProductModel.recordID) &&
        Objects.equals(this.itemCode, dkCloudDataModelProductsProductModel.itemCode) &&
        Objects.equals(this.description, dkCloudDataModelProductsProductModel.description) &&
        Objects.equals(this.description2, dkCloudDataModelProductsProductModel.description2) &&
        Objects.equals(this.inactive, dkCloudDataModelProductsProductModel.inactive) &&
        Objects.equals(this.recordCreated, dkCloudDataModelProductsProductModel.recordCreated) &&
        Objects.equals(this.recordModified, dkCloudDataModelProductsProductModel.recordModified) &&
        Objects.equals(this.aliasItemCode, dkCloudDataModelProductsProductModel.aliasItemCode) &&
        Objects.equals(this.itemClass, dkCloudDataModelProductsProductModel.itemClass) &&
        Objects.equals(this.unitCode, dkCloudDataModelProductsProductModel.unitCode) &&
        Objects.equals(this.group, dkCloudDataModelProductsProductModel.group) &&
        Objects.equals(this.unitQuantity, dkCloudDataModelProductsProductModel.unitQuantity) &&
        Objects.equals(this.netWeight, dkCloudDataModelProductsProductModel.netWeight) &&
        Objects.equals(this.unitVolume, dkCloudDataModelProductsProductModel.unitVolume) &&
        Objects.equals(this.totalQuantityInWarehouse, dkCloudDataModelProductsProductModel.totalQuantityInWarehouse) &&
        Objects.equals(this.purchasePrice, dkCloudDataModelProductsProductModel.purchasePrice) &&
        Objects.equals(this.currencyCode, dkCloudDataModelProductsProductModel.currencyCode) &&
        Objects.equals(this.exchange, dkCloudDataModelProductsProductModel.exchange) &&
        Objects.equals(this.unitPrice1, dkCloudDataModelProductsProductModel.unitPrice1) &&
        Objects.equals(this.purchasefactor, dkCloudDataModelProductsProductModel.purchasefactor) &&
        Objects.equals(this.costPrice, dkCloudDataModelProductsProductModel.costPrice) &&
        Objects.equals(this.profitRatio1, dkCloudDataModelProductsProductModel.profitRatio1) &&
        Objects.equals(this.unitPrice1WithTax, dkCloudDataModelProductsProductModel.unitPrice1WithTax) &&
        Objects.equals(this.unitPrice2, dkCloudDataModelProductsProductModel.unitPrice2) &&
        Objects.equals(this.unitPrice3WithTax, dkCloudDataModelProductsProductModel.unitPrice3WithTax) &&
        Objects.equals(this.showItemInWebShop, dkCloudDataModelProductsProductModel.showItemInWebShop) &&
        Objects.equals(this.allowDiscount, dkCloudDataModelProductsProductModel.allowDiscount) &&
        Objects.equals(this.discount, dkCloudDataModelProductsProductModel.discount) &&
        Objects.equals(this.unitPrice2WithTax, dkCloudDataModelProductsProductModel.unitPrice2WithTax) &&
        Objects.equals(this.unitPrice3, dkCloudDataModelProductsProductModel.unitPrice3) &&
        Objects.equals(this.propositionPrice, dkCloudDataModelProductsProductModel.propositionPrice) &&
        Objects.equals(this.propositionDateTo, dkCloudDataModelProductsProductModel.propositionDateTo) &&
        Objects.equals(this.extraDesc1, dkCloudDataModelProductsProductModel.extraDesc1) &&
        Objects.equals(this.extraDesc2, dkCloudDataModelProductsProductModel.extraDesc2) &&
        Objects.equals(this.isVariation, dkCloudDataModelProductsProductModel.isVariation) &&
        Objects.equals(this.taxPercent, dkCloudDataModelProductsProductModel.taxPercent) &&
        Objects.equals(this.salesTaxCode, dkCloudDataModelProductsProductModel.salesTaxCode) &&
        Objects.equals(this.salesLedgerCode, dkCloudDataModelProductsProductModel.salesLedgerCode) &&
        Objects.equals(this.purchaseTaxCode, dkCloudDataModelProductsProductModel.purchaseTaxCode) &&
        Objects.equals(this.purchaseLedgerCode, dkCloudDataModelProductsProductModel.purchaseLedgerCode) &&
        Objects.equals(this.allowNegativeInventiry, dkCloudDataModelProductsProductModel.allowNegativeInventiry) &&
        Objects.equals(this.discountQuantity, dkCloudDataModelProductsProductModel.discountQuantity) &&
        Objects.equals(this.maxDiscountAllowed, dkCloudDataModelProductsProductModel.maxDiscountAllowed) &&
        Objects.equals(this.defaultSaleQuantity, dkCloudDataModelProductsProductModel.defaultSaleQuantity) &&
        Objects.equals(this.extraFeeItemCode, dkCloudDataModelProductsProductModel.extraFeeItemCode) &&
        Objects.equals(this.costMethod, dkCloudDataModelProductsProductModel.costMethod) &&
        Objects.equals(this.dim1, dkCloudDataModelProductsProductModel.dim1) &&
        Objects.equals(this.dim2, dkCloudDataModelProductsProductModel.dim2) &&
        Objects.equals(this.dim3, dkCloudDataModelProductsProductModel.dim3) &&
        Objects.equals(this.deleted, dkCloudDataModelProductsProductModel.deleted) &&
        Objects.equals(this.hasAttachments, dkCloudDataModelProductsProductModel.hasAttachments) &&
        Objects.equals(this.hasBarcodes, dkCloudDataModelProductsProductModel.hasBarcodes) &&
        Objects.equals(this.hasCurrencyPrices, dkCloudDataModelProductsProductModel.hasCurrencyPrices) &&
        Objects.equals(this.hasUnits, dkCloudDataModelProductsProductModel.hasUnits) &&
        Objects.equals(this.hasAlternative, dkCloudDataModelProductsProductModel.hasAlternative) &&
        Objects.equals(this.barcodes, dkCloudDataModelProductsProductModel.barcodes) &&
        Objects.equals(this.attachments, dkCloudDataModelProductsProductModel.attachments) &&
        Objects.equals(this.categories, dkCloudDataModelProductsProductModel.categories) &&
        Objects.equals(this.warehouses, dkCloudDataModelProductsProductModel.warehouses) &&
        Objects.equals(this.currencyPrices, dkCloudDataModelProductsProductModel.currencyPrices) &&
        Objects.equals(this.units, dkCloudDataModelProductsProductModel.units) &&
        Objects.equals(this.alternative, dkCloudDataModelProductsProductModel.alternative) &&
        Objects.equals(this.changes, dkCloudDataModelProductsProductModel.changes) &&
        Objects.equals(this.memos, dkCloudDataModelProductsProductModel.memos) &&
        Objects.equals(this.vendors, dkCloudDataModelProductsProductModel.vendors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(objectDate, recordID, itemCode, description, description2, inactive, recordCreated, recordModified, aliasItemCode, itemClass, unitCode, group, unitQuantity, netWeight, unitVolume, totalQuantityInWarehouse, purchasePrice, currencyCode, exchange, unitPrice1, purchasefactor, costPrice, profitRatio1, unitPrice1WithTax, unitPrice2, unitPrice3WithTax, showItemInWebShop, allowDiscount, discount, unitPrice2WithTax, unitPrice3, propositionPrice, propositionDateTo, extraDesc1, extraDesc2, isVariation, taxPercent, salesTaxCode, salesLedgerCode, purchaseTaxCode, purchaseLedgerCode, allowNegativeInventiry, discountQuantity, maxDiscountAllowed, defaultSaleQuantity, extraFeeItemCode, costMethod, dim1, dim2, dim3, deleted, hasAttachments, hasBarcodes, hasCurrencyPrices, hasUnits, hasAlternative, barcodes, attachments, categories, warehouses, currencyPrices, units, alternative, changes, memos, vendors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DkCloudDataModelProductsProductModel {\n");
    
    sb.append("    objectDate: ").append(toIndentedString(objectDate)).append("\n");
    sb.append("    recordID: ").append(toIndentedString(recordID)).append("\n");
    sb.append("    itemCode: ").append(toIndentedString(itemCode)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    description2: ").append(toIndentedString(description2)).append("\n");
    sb.append("    inactive: ").append(toIndentedString(inactive)).append("\n");
    sb.append("    recordCreated: ").append(toIndentedString(recordCreated)).append("\n");
    sb.append("    recordModified: ").append(toIndentedString(recordModified)).append("\n");
    sb.append("    aliasItemCode: ").append(toIndentedString(aliasItemCode)).append("\n");
    sb.append("    itemClass: ").append(toIndentedString(itemClass)).append("\n");
    sb.append("    unitCode: ").append(toIndentedString(unitCode)).append("\n");
    sb.append("    group: ").append(toIndentedString(group)).append("\n");
    sb.append("    unitQuantity: ").append(toIndentedString(unitQuantity)).append("\n");
    sb.append("    netWeight: ").append(toIndentedString(netWeight)).append("\n");
    sb.append("    unitVolume: ").append(toIndentedString(unitVolume)).append("\n");
    sb.append("    totalQuantityInWarehouse: ").append(toIndentedString(totalQuantityInWarehouse)).append("\n");
    sb.append("    purchasePrice: ").append(toIndentedString(purchasePrice)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("    unitPrice1: ").append(toIndentedString(unitPrice1)).append("\n");
    sb.append("    purchasefactor: ").append(toIndentedString(purchasefactor)).append("\n");
    sb.append("    costPrice: ").append(toIndentedString(costPrice)).append("\n");
    sb.append("    profitRatio1: ").append(toIndentedString(profitRatio1)).append("\n");
    sb.append("    unitPrice1WithTax: ").append(toIndentedString(unitPrice1WithTax)).append("\n");
    sb.append("    unitPrice2: ").append(toIndentedString(unitPrice2)).append("\n");
    sb.append("    unitPrice3WithTax: ").append(toIndentedString(unitPrice3WithTax)).append("\n");
    sb.append("    showItemInWebShop: ").append(toIndentedString(showItemInWebShop)).append("\n");
    sb.append("    allowDiscount: ").append(toIndentedString(allowDiscount)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    unitPrice2WithTax: ").append(toIndentedString(unitPrice2WithTax)).append("\n");
    sb.append("    unitPrice3: ").append(toIndentedString(unitPrice3)).append("\n");
    sb.append("    propositionPrice: ").append(toIndentedString(propositionPrice)).append("\n");
    sb.append("    propositionDateTo: ").append(toIndentedString(propositionDateTo)).append("\n");
    sb.append("    extraDesc1: ").append(toIndentedString(extraDesc1)).append("\n");
    sb.append("    extraDesc2: ").append(toIndentedString(extraDesc2)).append("\n");
    sb.append("    isVariation: ").append(toIndentedString(isVariation)).append("\n");
    sb.append("    taxPercent: ").append(toIndentedString(taxPercent)).append("\n");
    sb.append("    salesTaxCode: ").append(toIndentedString(salesTaxCode)).append("\n");
    sb.append("    salesLedgerCode: ").append(toIndentedString(salesLedgerCode)).append("\n");
    sb.append("    purchaseTaxCode: ").append(toIndentedString(purchaseTaxCode)).append("\n");
    sb.append("    purchaseLedgerCode: ").append(toIndentedString(purchaseLedgerCode)).append("\n");
    sb.append("    allowNegativeInventiry: ").append(toIndentedString(allowNegativeInventiry)).append("\n");
    sb.append("    discountQuantity: ").append(toIndentedString(discountQuantity)).append("\n");
    sb.append("    maxDiscountAllowed: ").append(toIndentedString(maxDiscountAllowed)).append("\n");
    sb.append("    defaultSaleQuantity: ").append(toIndentedString(defaultSaleQuantity)).append("\n");
    sb.append("    extraFeeItemCode: ").append(toIndentedString(extraFeeItemCode)).append("\n");
    sb.append("    costMethod: ").append(toIndentedString(costMethod)).append("\n");
    sb.append("    dim1: ").append(toIndentedString(dim1)).append("\n");
    sb.append("    dim2: ").append(toIndentedString(dim2)).append("\n");
    sb.append("    dim3: ").append(toIndentedString(dim3)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    hasAttachments: ").append(toIndentedString(hasAttachments)).append("\n");
    sb.append("    hasBarcodes: ").append(toIndentedString(hasBarcodes)).append("\n");
    sb.append("    hasCurrencyPrices: ").append(toIndentedString(hasCurrencyPrices)).append("\n");
    sb.append("    hasUnits: ").append(toIndentedString(hasUnits)).append("\n");
    sb.append("    hasAlternative: ").append(toIndentedString(hasAlternative)).append("\n");
    sb.append("    barcodes: ").append(toIndentedString(barcodes)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    warehouses: ").append(toIndentedString(warehouses)).append("\n");
    sb.append("    currencyPrices: ").append(toIndentedString(currencyPrices)).append("\n");
    sb.append("    units: ").append(toIndentedString(units)).append("\n");
    sb.append("    alternative: ").append(toIndentedString(alternative)).append("\n");
    sb.append("    changes: ").append(toIndentedString(changes)).append("\n");
    sb.append("    memos: ").append(toIndentedString(memos)).append("\n");
    sb.append("    vendors: ").append(toIndentedString(vendors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


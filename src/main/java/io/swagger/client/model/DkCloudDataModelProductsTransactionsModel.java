/*
 * dkPlus.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * DkCloudDataModelProductsTransactionsModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-12T12:57:09.866Z")



public class DkCloudDataModelProductsTransactionsModel {
  @SerializedName("ID")
  private Integer ID = null;

  @SerializedName("Created")
  private OffsetDateTime created = null;

  @SerializedName("CreatedBy")
  private String createdBy = null;

  @SerializedName("Modified")
  private OffsetDateTime modified = null;

  /**
   * Gets or Sets origin
   */
  @JsonAdapter(OriginEnum.Adapter.class)
  public enum OriginEnum {
    GLJOURNAL("GLJournal"),
    
    ARJOURNAL("ARJournal"),
    
    APJOURNAL("APJournal"),
    
    SOINVOICE("SOInvoice"),
    
    ARINTERESTCALC("ARInterestCalc"),
    
    INJOURNAL("InJournal"),
    
    SOJOURNAL("SOJournal"),
    
    SOOPENINVOICE("SOOpenInvoice"),
    
    PJJOURNAL("PjJournal"),
    
    APINVOICE("APInvoice"),
    
    APINVOICEPAYMENT("APInvoicePayment"),
    
    PJINVOICE("PjInvoice"),
    
    SKIPAYMENT("SKIPayment"),
    
    PJDIRECT("PjDirect"),
    
    GESALDO("GeSaldo"),
    
    FAJOURNAL("FAJournal"),
    
    INBOMFABRICATE("INBOMFabricate"),
    
    NOT_USED("NOT_USED"),
    
    MEPAYMENTS("MEPayments"),
    
    MEBANKTRANS("MEBankTrans"),
    
    PJPOSTEDJOURNAL("PjPostedJournal"),
    
    CUSTOMREPORT("CustomReport"),
    
    DEPRECIATIONREPORT("DepreciationReport"),
    
    VISA("Visa"),
    
    EURO("Euro"),
    
    DOJOURNAL("DoJournal"),
    
    POJOURNAL("POJournal"),
    
    POPOSTEDJOURNAL("POPostedJournal"),
    
    DATAEXPORT("DataExport"),
    
    ORGRANTAPPLICATION("ORGrantApplication"),
    
    ORGRANTPAYMENT("OrGrantPayment"),
    
    APINTERESTCALC("APInterestCalc"),
    
    ARBSSPAYMENT("ARBSSPayment"),
    
    ORMEMBERFEE("ORMemberFee"),
    
    ORMEMBERFEECLAIM("ORMemberFeeClaim"),
    
    ORMEMBERFEECLAIMDROP("ORMemberFeeClaimDrop"),
    
    ARBSSPAYMENTEX("ARBSSPaymentEx"),
    
    ORMEMBERFEECLAIMEX("ORMemberFeeClaimEx"),
    
    ORMEMBERFEECLAIMDROPEX("ORMemberFeeClaimDropEx"),
    
    INTRANS("InTrans"),
    
    ORMEMBERFEECREDITCARDEX("ORMemberFeeCreditcardEx"),
    
    ORMEMBERFEECREDITCARDPAYMENTEX("ORMemberFeeCreditcardPaymentEx"),
    
    INWOPJOURNAL("InWOPJournal"),
    
    INOPENJOURNAL("InOpenJournal"),
    
    INUNDISPATCHEDSALESORDER("InUndispatchedSalesOrder"),
    
    INWOPPOSTEDJOURNAL("InWOPPostedJournal"),
    
    GLTRANS("GLTrans"),
    
    APREQUEST("APRequest"),
    
    ARTRANS("ArTrans"),
    
    APTRANS("ApTrans"),
    
    INPRESCRIPTION("InPrescription"),
    
    DISCARDEDACCOUNTPERIOD("DiscardedAccountPeriod"),
    
    SOHEAD("SoHead");

    private String value;

    OriginEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OriginEnum fromValue(String text) {
      for (OriginEnum b : OriginEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<OriginEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OriginEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OriginEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return OriginEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("Origin")
  private OriginEnum origin = null;

  @SerializedName("HeadId")
  private Integer headId = null;

  @SerializedName("Sequence")
  private Integer sequence = null;

  @SerializedName("ItemCode")
  private String itemCode = null;

  @SerializedName("Warehouse")
  private String warehouse = null;

  @SerializedName("SubGroup1")
  private String subGroup1 = null;

  @SerializedName("SubGroup2")
  private String subGroup2 = null;

  @SerializedName("SubGroup3")
  private String subGroup3 = null;

  @SerializedName("SubGroup4")
  private String subGroup4 = null;

  @SerializedName("Vendor")
  private String vendor = null;

  @SerializedName("Customer")
  private String customer = null;

  @SerializedName("Voucher")
  private String voucher = null;

  /**
   * Gets or Sets transactionCode
   */
  @JsonAdapter(TransactionCodeEnum.Adapter.class)
  public enum TransactionCodeEnum {
    INTRANSACTIONJOURNAL("InTransactionJournal"),
    
    INTRANSFERJOURNAL("InTransferJournal"),
    
    INBOMJOURNAL("InBOMJournal"),
    
    INCOUNTINGJOURNAL("InCountingJournal"),
    
    SOSALESORDERS("SOSalesOrders"),
    
    POPURCHASEORDERS("POPurchaseOrders"),
    
    PJPROJECT("PjProject"),
    
    SOAFREIKNINGUR("SOAfreikningur"),
    
    POCUSTOMREPORT("POCustomReport");

    private String value;

    TransactionCodeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TransactionCodeEnum fromValue(String text) {
      for (TransactionCodeEnum b : TransactionCodeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TransactionCodeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TransactionCodeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TransactionCodeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TransactionCodeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("TransactionCode")
  private TransactionCodeEnum transactionCode = null;

  @SerializedName("JournalDate")
  private OffsetDateTime journalDate = null;

  /**
   * Gets or Sets journalType
   */
  @JsonAdapter(JournalTypeEnum.Adapter.class)
  public enum JournalTypeEnum {
    MANUAL("Manual"),
    
    AUTOMATIC("Automatic"),
    
    EXCHANGERATEDIFFERENCE("ExchangeRateDifference"),
    
    PAYMENTS("Payments"),
    
    RECEIPT("Receipt"),
    
    FUNDTRANSFER("FundTransfer"),
    
    MEDICOR("Medicor"),
    
    WEBSERVICE("Webservice"),
    
    SOONLINEPOSTING("SoOnlinePosting"),
    
    PRINTING("Printing");

    private String value;

    JournalTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static JournalTypeEnum fromValue(String text) {
      for (JournalTypeEnum b : JournalTypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<JournalTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final JournalTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public JournalTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return JournalTypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("JournalType")
  private JournalTypeEnum journalType = null;

  @SerializedName("Quantity")
  private Double quantity = null;

  @SerializedName("PurchasePrice")
  private Double purchasePrice = null;

  @SerializedName("CurrencyCode")
  private String currencyCode = null;

  @SerializedName("Exchange")
  private Double exchange = null;

  @SerializedName("CostPrice")
  private Double costPrice = null;

  @SerializedName("CostAmount")
  private Double costAmount = null;

  @SerializedName("SalesAmount")
  private Double salesAmount = null;

  @SerializedName("InventOnHand")
  private Double inventOnHand = null;

  @SerializedName("Text")
  private String text = null;

  @SerializedName("Reference")
  private String reference = null;

  @SerializedName("Dim1")
  private String dim1 = null;

  @SerializedName("Dim2")
  private String dim2 = null;

  @SerializedName("Dim3")
  private String dim3 = null;

  @SerializedName("NetWeight")
  private Double netWeight = null;

  @SerializedName("UnitVolume")
  private Double unitVolume = null;

  @SerializedName("NumberOfPackages")
  private Double numberOfPackages = null;

  @SerializedName("CountedQuantity")
  private Double countedQuantity = null;

  @SerializedName("JobNumber")
  private String jobNumber = null;

  @SerializedName("VendorPrice")
  private Double vendorPrice = null;

  @SerializedName("VendorDiscount")
  private Double vendorDiscount = null;

  @SerializedName("Fabrication")
  private Integer fabrication = null;

  @SerializedName("Batch")
  private String batch = null;

  @SerializedName("BatchExpiry")
  private OffsetDateTime batchExpiry = null;

  /**
   * Gets or Sets typeOf
   */
  @JsonAdapter(TypeOfEnum.Adapter.class)
  public enum TypeOfEnum {
    NOTDEFINED("NotDefined"),
    
    WASTAGE("Wastage"),
    
    RETURNED("Returned"),
    
    DEPRECIATED("Depreciated"),
    
    ADJUSTED("Adjusted"),
    
    EXTRAFEE("ExtraFee");

    private String value;

    TypeOfEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeOfEnum fromValue(String text) {
      for (TypeOfEnum b : TypeOfEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeOfEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeOfEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeOfEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeOfEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("TypeOf")
  private TypeOfEnum typeOf = null;

  @SerializedName("PurchaseAmount")
  private Double purchaseAmount = null;

  @SerializedName("UnitCode")
  private String unitCode = null;

  @SerializedName("INPUnitCode")
  private String inPUnitCode = null;

  @SerializedName("PoBatchId")
  private Integer poBatchId = null;

  @SerializedName("JobRequestId")
  private String jobRequestId = null;

  public DkCloudDataModelProductsTransactionsModel ID(Integer ID) {
    this.ID = ID;
    return this;
  }

   /**
   * Get ID
   * @return ID
  **/
  @ApiModelProperty(value = "")
  public Integer getID() {
    return ID;
  }

  public void setID(Integer ID) {
    this.ID = ID;
  }

  public DkCloudDataModelProductsTransactionsModel created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public DkCloudDataModelProductsTransactionsModel createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * Get createdBy
   * @return createdBy
  **/
  @ApiModelProperty(value = "")
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }

  public DkCloudDataModelProductsTransactionsModel modified(OffsetDateTime modified) {
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getModified() {
    return modified;
  }

  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }

  public DkCloudDataModelProductsTransactionsModel origin(OriginEnum origin) {
    this.origin = origin;
    return this;
  }

   /**
   * Get origin
   * @return origin
  **/
  @ApiModelProperty(value = "")
  public OriginEnum getOrigin() {
    return origin;
  }

  public void setOrigin(OriginEnum origin) {
    this.origin = origin;
  }

  public DkCloudDataModelProductsTransactionsModel headId(Integer headId) {
    this.headId = headId;
    return this;
  }

   /**
   * Get headId
   * @return headId
  **/
  @ApiModelProperty(value = "")
  public Integer getHeadId() {
    return headId;
  }

  public void setHeadId(Integer headId) {
    this.headId = headId;
  }

  public DkCloudDataModelProductsTransactionsModel sequence(Integer sequence) {
    this.sequence = sequence;
    return this;
  }

   /**
   * Get sequence
   * @return sequence
  **/
  @ApiModelProperty(value = "")
  public Integer getSequence() {
    return sequence;
  }

  public void setSequence(Integer sequence) {
    this.sequence = sequence;
  }

  public DkCloudDataModelProductsTransactionsModel itemCode(String itemCode) {
    this.itemCode = itemCode;
    return this;
  }

   /**
   * Get itemCode
   * @return itemCode
  **/
  @ApiModelProperty(value = "")
  public String getItemCode() {
    return itemCode;
  }

  public void setItemCode(String itemCode) {
    this.itemCode = itemCode;
  }

  public DkCloudDataModelProductsTransactionsModel warehouse(String warehouse) {
    this.warehouse = warehouse;
    return this;
  }

   /**
   * Get warehouse
   * @return warehouse
  **/
  @ApiModelProperty(value = "")
  public String getWarehouse() {
    return warehouse;
  }

  public void setWarehouse(String warehouse) {
    this.warehouse = warehouse;
  }

  public DkCloudDataModelProductsTransactionsModel subGroup1(String subGroup1) {
    this.subGroup1 = subGroup1;
    return this;
  }

   /**
   * Get subGroup1
   * @return subGroup1
  **/
  @ApiModelProperty(value = "")
  public String getSubGroup1() {
    return subGroup1;
  }

  public void setSubGroup1(String subGroup1) {
    this.subGroup1 = subGroup1;
  }

  public DkCloudDataModelProductsTransactionsModel subGroup2(String subGroup2) {
    this.subGroup2 = subGroup2;
    return this;
  }

   /**
   * Get subGroup2
   * @return subGroup2
  **/
  @ApiModelProperty(value = "")
  public String getSubGroup2() {
    return subGroup2;
  }

  public void setSubGroup2(String subGroup2) {
    this.subGroup2 = subGroup2;
  }

  public DkCloudDataModelProductsTransactionsModel subGroup3(String subGroup3) {
    this.subGroup3 = subGroup3;
    return this;
  }

   /**
   * Get subGroup3
   * @return subGroup3
  **/
  @ApiModelProperty(value = "")
  public String getSubGroup3() {
    return subGroup3;
  }

  public void setSubGroup3(String subGroup3) {
    this.subGroup3 = subGroup3;
  }

  public DkCloudDataModelProductsTransactionsModel subGroup4(String subGroup4) {
    this.subGroup4 = subGroup4;
    return this;
  }

   /**
   * Get subGroup4
   * @return subGroup4
  **/
  @ApiModelProperty(value = "")
  public String getSubGroup4() {
    return subGroup4;
  }

  public void setSubGroup4(String subGroup4) {
    this.subGroup4 = subGroup4;
  }

  public DkCloudDataModelProductsTransactionsModel vendor(String vendor) {
    this.vendor = vendor;
    return this;
  }

   /**
   * Get vendor
   * @return vendor
  **/
  @ApiModelProperty(value = "")
  public String getVendor() {
    return vendor;
  }

  public void setVendor(String vendor) {
    this.vendor = vendor;
  }

  public DkCloudDataModelProductsTransactionsModel customer(String customer) {
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @ApiModelProperty(value = "")
  public String getCustomer() {
    return customer;
  }

  public void setCustomer(String customer) {
    this.customer = customer;
  }

  public DkCloudDataModelProductsTransactionsModel voucher(String voucher) {
    this.voucher = voucher;
    return this;
  }

   /**
   * Get voucher
   * @return voucher
  **/
  @ApiModelProperty(value = "")
  public String getVoucher() {
    return voucher;
  }

  public void setVoucher(String voucher) {
    this.voucher = voucher;
  }

  public DkCloudDataModelProductsTransactionsModel transactionCode(TransactionCodeEnum transactionCode) {
    this.transactionCode = transactionCode;
    return this;
  }

   /**
   * Get transactionCode
   * @return transactionCode
  **/
  @ApiModelProperty(value = "")
  public TransactionCodeEnum getTransactionCode() {
    return transactionCode;
  }

  public void setTransactionCode(TransactionCodeEnum transactionCode) {
    this.transactionCode = transactionCode;
  }

  public DkCloudDataModelProductsTransactionsModel journalDate(OffsetDateTime journalDate) {
    this.journalDate = journalDate;
    return this;
  }

   /**
   * Get journalDate
   * @return journalDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getJournalDate() {
    return journalDate;
  }

  public void setJournalDate(OffsetDateTime journalDate) {
    this.journalDate = journalDate;
  }

  public DkCloudDataModelProductsTransactionsModel journalType(JournalTypeEnum journalType) {
    this.journalType = journalType;
    return this;
  }

   /**
   * Get journalType
   * @return journalType
  **/
  @ApiModelProperty(value = "")
  public JournalTypeEnum getJournalType() {
    return journalType;
  }

  public void setJournalType(JournalTypeEnum journalType) {
    this.journalType = journalType;
  }

  public DkCloudDataModelProductsTransactionsModel quantity(Double quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public Double getQuantity() {
    return quantity;
  }

  public void setQuantity(Double quantity) {
    this.quantity = quantity;
  }

  public DkCloudDataModelProductsTransactionsModel purchasePrice(Double purchasePrice) {
    this.purchasePrice = purchasePrice;
    return this;
  }

   /**
   * Get purchasePrice
   * @return purchasePrice
  **/
  @ApiModelProperty(value = "")
  public Double getPurchasePrice() {
    return purchasePrice;
  }

  public void setPurchasePrice(Double purchasePrice) {
    this.purchasePrice = purchasePrice;
  }

  public DkCloudDataModelProductsTransactionsModel currencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
    return this;
  }

   /**
   * Get currencyCode
   * @return currencyCode
  **/
  @ApiModelProperty(value = "")
  public String getCurrencyCode() {
    return currencyCode;
  }

  public void setCurrencyCode(String currencyCode) {
    this.currencyCode = currencyCode;
  }

  public DkCloudDataModelProductsTransactionsModel exchange(Double exchange) {
    this.exchange = exchange;
    return this;
  }

   /**
   * Get exchange
   * @return exchange
  **/
  @ApiModelProperty(value = "")
  public Double getExchange() {
    return exchange;
  }

  public void setExchange(Double exchange) {
    this.exchange = exchange;
  }

  public DkCloudDataModelProductsTransactionsModel costPrice(Double costPrice) {
    this.costPrice = costPrice;
    return this;
  }

   /**
   * Get costPrice
   * @return costPrice
  **/
  @ApiModelProperty(value = "")
  public Double getCostPrice() {
    return costPrice;
  }

  public void setCostPrice(Double costPrice) {
    this.costPrice = costPrice;
  }

  public DkCloudDataModelProductsTransactionsModel costAmount(Double costAmount) {
    this.costAmount = costAmount;
    return this;
  }

   /**
   * Get costAmount
   * @return costAmount
  **/
  @ApiModelProperty(value = "")
  public Double getCostAmount() {
    return costAmount;
  }

  public void setCostAmount(Double costAmount) {
    this.costAmount = costAmount;
  }

  public DkCloudDataModelProductsTransactionsModel salesAmount(Double salesAmount) {
    this.salesAmount = salesAmount;
    return this;
  }

   /**
   * Get salesAmount
   * @return salesAmount
  **/
  @ApiModelProperty(value = "")
  public Double getSalesAmount() {
    return salesAmount;
  }

  public void setSalesAmount(Double salesAmount) {
    this.salesAmount = salesAmount;
  }

  public DkCloudDataModelProductsTransactionsModel inventOnHand(Double inventOnHand) {
    this.inventOnHand = inventOnHand;
    return this;
  }

   /**
   * Get inventOnHand
   * @return inventOnHand
  **/
  @ApiModelProperty(value = "")
  public Double getInventOnHand() {
    return inventOnHand;
  }

  public void setInventOnHand(Double inventOnHand) {
    this.inventOnHand = inventOnHand;
  }

  public DkCloudDataModelProductsTransactionsModel text(String text) {
    this.text = text;
    return this;
  }

   /**
   * Get text
   * @return text
  **/
  @ApiModelProperty(value = "")
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }

  public DkCloudDataModelProductsTransactionsModel reference(String reference) {
    this.reference = reference;
    return this;
  }

   /**
   * Get reference
   * @return reference
  **/
  @ApiModelProperty(value = "")
  public String getReference() {
    return reference;
  }

  public void setReference(String reference) {
    this.reference = reference;
  }

  public DkCloudDataModelProductsTransactionsModel dim1(String dim1) {
    this.dim1 = dim1;
    return this;
  }

   /**
   * Get dim1
   * @return dim1
  **/
  @ApiModelProperty(value = "")
  public String getDim1() {
    return dim1;
  }

  public void setDim1(String dim1) {
    this.dim1 = dim1;
  }

  public DkCloudDataModelProductsTransactionsModel dim2(String dim2) {
    this.dim2 = dim2;
    return this;
  }

   /**
   * Get dim2
   * @return dim2
  **/
  @ApiModelProperty(value = "")
  public String getDim2() {
    return dim2;
  }

  public void setDim2(String dim2) {
    this.dim2 = dim2;
  }

  public DkCloudDataModelProductsTransactionsModel dim3(String dim3) {
    this.dim3 = dim3;
    return this;
  }

   /**
   * Get dim3
   * @return dim3
  **/
  @ApiModelProperty(value = "")
  public String getDim3() {
    return dim3;
  }

  public void setDim3(String dim3) {
    this.dim3 = dim3;
  }

  public DkCloudDataModelProductsTransactionsModel netWeight(Double netWeight) {
    this.netWeight = netWeight;
    return this;
  }

   /**
   * Get netWeight
   * @return netWeight
  **/
  @ApiModelProperty(value = "")
  public Double getNetWeight() {
    return netWeight;
  }

  public void setNetWeight(Double netWeight) {
    this.netWeight = netWeight;
  }

  public DkCloudDataModelProductsTransactionsModel unitVolume(Double unitVolume) {
    this.unitVolume = unitVolume;
    return this;
  }

   /**
   * Get unitVolume
   * @return unitVolume
  **/
  @ApiModelProperty(value = "")
  public Double getUnitVolume() {
    return unitVolume;
  }

  public void setUnitVolume(Double unitVolume) {
    this.unitVolume = unitVolume;
  }

  public DkCloudDataModelProductsTransactionsModel numberOfPackages(Double numberOfPackages) {
    this.numberOfPackages = numberOfPackages;
    return this;
  }

   /**
   * Get numberOfPackages
   * @return numberOfPackages
  **/
  @ApiModelProperty(value = "")
  public Double getNumberOfPackages() {
    return numberOfPackages;
  }

  public void setNumberOfPackages(Double numberOfPackages) {
    this.numberOfPackages = numberOfPackages;
  }

  public DkCloudDataModelProductsTransactionsModel countedQuantity(Double countedQuantity) {
    this.countedQuantity = countedQuantity;
    return this;
  }

   /**
   * Get countedQuantity
   * @return countedQuantity
  **/
  @ApiModelProperty(value = "")
  public Double getCountedQuantity() {
    return countedQuantity;
  }

  public void setCountedQuantity(Double countedQuantity) {
    this.countedQuantity = countedQuantity;
  }

  public DkCloudDataModelProductsTransactionsModel jobNumber(String jobNumber) {
    this.jobNumber = jobNumber;
    return this;
  }

   /**
   * Get jobNumber
   * @return jobNumber
  **/
  @ApiModelProperty(value = "")
  public String getJobNumber() {
    return jobNumber;
  }

  public void setJobNumber(String jobNumber) {
    this.jobNumber = jobNumber;
  }

  public DkCloudDataModelProductsTransactionsModel vendorPrice(Double vendorPrice) {
    this.vendorPrice = vendorPrice;
    return this;
  }

   /**
   * Get vendorPrice
   * @return vendorPrice
  **/
  @ApiModelProperty(value = "")
  public Double getVendorPrice() {
    return vendorPrice;
  }

  public void setVendorPrice(Double vendorPrice) {
    this.vendorPrice = vendorPrice;
  }

  public DkCloudDataModelProductsTransactionsModel vendorDiscount(Double vendorDiscount) {
    this.vendorDiscount = vendorDiscount;
    return this;
  }

   /**
   * Get vendorDiscount
   * @return vendorDiscount
  **/
  @ApiModelProperty(value = "")
  public Double getVendorDiscount() {
    return vendorDiscount;
  }

  public void setVendorDiscount(Double vendorDiscount) {
    this.vendorDiscount = vendorDiscount;
  }

  public DkCloudDataModelProductsTransactionsModel fabrication(Integer fabrication) {
    this.fabrication = fabrication;
    return this;
  }

   /**
   * Get fabrication
   * @return fabrication
  **/
  @ApiModelProperty(value = "")
  public Integer getFabrication() {
    return fabrication;
  }

  public void setFabrication(Integer fabrication) {
    this.fabrication = fabrication;
  }

  public DkCloudDataModelProductsTransactionsModel batch(String batch) {
    this.batch = batch;
    return this;
  }

   /**
   * Get batch
   * @return batch
  **/
  @ApiModelProperty(value = "")
  public String getBatch() {
    return batch;
  }

  public void setBatch(String batch) {
    this.batch = batch;
  }

  public DkCloudDataModelProductsTransactionsModel batchExpiry(OffsetDateTime batchExpiry) {
    this.batchExpiry = batchExpiry;
    return this;
  }

   /**
   * Get batchExpiry
   * @return batchExpiry
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getBatchExpiry() {
    return batchExpiry;
  }

  public void setBatchExpiry(OffsetDateTime batchExpiry) {
    this.batchExpiry = batchExpiry;
  }

  public DkCloudDataModelProductsTransactionsModel typeOf(TypeOfEnum typeOf) {
    this.typeOf = typeOf;
    return this;
  }

   /**
   * Get typeOf
   * @return typeOf
  **/
  @ApiModelProperty(value = "")
  public TypeOfEnum getTypeOf() {
    return typeOf;
  }

  public void setTypeOf(TypeOfEnum typeOf) {
    this.typeOf = typeOf;
  }

  public DkCloudDataModelProductsTransactionsModel purchaseAmount(Double purchaseAmount) {
    this.purchaseAmount = purchaseAmount;
    return this;
  }

   /**
   * Get purchaseAmount
   * @return purchaseAmount
  **/
  @ApiModelProperty(value = "")
  public Double getPurchaseAmount() {
    return purchaseAmount;
  }

  public void setPurchaseAmount(Double purchaseAmount) {
    this.purchaseAmount = purchaseAmount;
  }

  public DkCloudDataModelProductsTransactionsModel unitCode(String unitCode) {
    this.unitCode = unitCode;
    return this;
  }

   /**
   * Get unitCode
   * @return unitCode
  **/
  @ApiModelProperty(value = "")
  public String getUnitCode() {
    return unitCode;
  }

  public void setUnitCode(String unitCode) {
    this.unitCode = unitCode;
  }

  public DkCloudDataModelProductsTransactionsModel inPUnitCode(String inPUnitCode) {
    this.inPUnitCode = inPUnitCode;
    return this;
  }

   /**
   * Get inPUnitCode
   * @return inPUnitCode
  **/
  @ApiModelProperty(value = "")
  public String getInPUnitCode() {
    return inPUnitCode;
  }

  public void setInPUnitCode(String inPUnitCode) {
    this.inPUnitCode = inPUnitCode;
  }

  public DkCloudDataModelProductsTransactionsModel poBatchId(Integer poBatchId) {
    this.poBatchId = poBatchId;
    return this;
  }

   /**
   * Get poBatchId
   * @return poBatchId
  **/
  @ApiModelProperty(value = "")
  public Integer getPoBatchId() {
    return poBatchId;
  }

  public void setPoBatchId(Integer poBatchId) {
    this.poBatchId = poBatchId;
  }

  public DkCloudDataModelProductsTransactionsModel jobRequestId(String jobRequestId) {
    this.jobRequestId = jobRequestId;
    return this;
  }

   /**
   * Get jobRequestId
   * @return jobRequestId
  **/
  @ApiModelProperty(value = "")
  public String getJobRequestId() {
    return jobRequestId;
  }

  public void setJobRequestId(String jobRequestId) {
    this.jobRequestId = jobRequestId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DkCloudDataModelProductsTransactionsModel dkCloudDataModelProductsTransactionsModel = (DkCloudDataModelProductsTransactionsModel) o;
    return Objects.equals(this.ID, dkCloudDataModelProductsTransactionsModel.ID) &&
        Objects.equals(this.created, dkCloudDataModelProductsTransactionsModel.created) &&
        Objects.equals(this.createdBy, dkCloudDataModelProductsTransactionsModel.createdBy) &&
        Objects.equals(this.modified, dkCloudDataModelProductsTransactionsModel.modified) &&
        Objects.equals(this.origin, dkCloudDataModelProductsTransactionsModel.origin) &&
        Objects.equals(this.headId, dkCloudDataModelProductsTransactionsModel.headId) &&
        Objects.equals(this.sequence, dkCloudDataModelProductsTransactionsModel.sequence) &&
        Objects.equals(this.itemCode, dkCloudDataModelProductsTransactionsModel.itemCode) &&
        Objects.equals(this.warehouse, dkCloudDataModelProductsTransactionsModel.warehouse) &&
        Objects.equals(this.subGroup1, dkCloudDataModelProductsTransactionsModel.subGroup1) &&
        Objects.equals(this.subGroup2, dkCloudDataModelProductsTransactionsModel.subGroup2) &&
        Objects.equals(this.subGroup3, dkCloudDataModelProductsTransactionsModel.subGroup3) &&
        Objects.equals(this.subGroup4, dkCloudDataModelProductsTransactionsModel.subGroup4) &&
        Objects.equals(this.vendor, dkCloudDataModelProductsTransactionsModel.vendor) &&
        Objects.equals(this.customer, dkCloudDataModelProductsTransactionsModel.customer) &&
        Objects.equals(this.voucher, dkCloudDataModelProductsTransactionsModel.voucher) &&
        Objects.equals(this.transactionCode, dkCloudDataModelProductsTransactionsModel.transactionCode) &&
        Objects.equals(this.journalDate, dkCloudDataModelProductsTransactionsModel.journalDate) &&
        Objects.equals(this.journalType, dkCloudDataModelProductsTransactionsModel.journalType) &&
        Objects.equals(this.quantity, dkCloudDataModelProductsTransactionsModel.quantity) &&
        Objects.equals(this.purchasePrice, dkCloudDataModelProductsTransactionsModel.purchasePrice) &&
        Objects.equals(this.currencyCode, dkCloudDataModelProductsTransactionsModel.currencyCode) &&
        Objects.equals(this.exchange, dkCloudDataModelProductsTransactionsModel.exchange) &&
        Objects.equals(this.costPrice, dkCloudDataModelProductsTransactionsModel.costPrice) &&
        Objects.equals(this.costAmount, dkCloudDataModelProductsTransactionsModel.costAmount) &&
        Objects.equals(this.salesAmount, dkCloudDataModelProductsTransactionsModel.salesAmount) &&
        Objects.equals(this.inventOnHand, dkCloudDataModelProductsTransactionsModel.inventOnHand) &&
        Objects.equals(this.text, dkCloudDataModelProductsTransactionsModel.text) &&
        Objects.equals(this.reference, dkCloudDataModelProductsTransactionsModel.reference) &&
        Objects.equals(this.dim1, dkCloudDataModelProductsTransactionsModel.dim1) &&
        Objects.equals(this.dim2, dkCloudDataModelProductsTransactionsModel.dim2) &&
        Objects.equals(this.dim3, dkCloudDataModelProductsTransactionsModel.dim3) &&
        Objects.equals(this.netWeight, dkCloudDataModelProductsTransactionsModel.netWeight) &&
        Objects.equals(this.unitVolume, dkCloudDataModelProductsTransactionsModel.unitVolume) &&
        Objects.equals(this.numberOfPackages, dkCloudDataModelProductsTransactionsModel.numberOfPackages) &&
        Objects.equals(this.countedQuantity, dkCloudDataModelProductsTransactionsModel.countedQuantity) &&
        Objects.equals(this.jobNumber, dkCloudDataModelProductsTransactionsModel.jobNumber) &&
        Objects.equals(this.vendorPrice, dkCloudDataModelProductsTransactionsModel.vendorPrice) &&
        Objects.equals(this.vendorDiscount, dkCloudDataModelProductsTransactionsModel.vendorDiscount) &&
        Objects.equals(this.fabrication, dkCloudDataModelProductsTransactionsModel.fabrication) &&
        Objects.equals(this.batch, dkCloudDataModelProductsTransactionsModel.batch) &&
        Objects.equals(this.batchExpiry, dkCloudDataModelProductsTransactionsModel.batchExpiry) &&
        Objects.equals(this.typeOf, dkCloudDataModelProductsTransactionsModel.typeOf) &&
        Objects.equals(this.purchaseAmount, dkCloudDataModelProductsTransactionsModel.purchaseAmount) &&
        Objects.equals(this.unitCode, dkCloudDataModelProductsTransactionsModel.unitCode) &&
        Objects.equals(this.inPUnitCode, dkCloudDataModelProductsTransactionsModel.inPUnitCode) &&
        Objects.equals(this.poBatchId, dkCloudDataModelProductsTransactionsModel.poBatchId) &&
        Objects.equals(this.jobRequestId, dkCloudDataModelProductsTransactionsModel.jobRequestId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ID, created, createdBy, modified, origin, headId, sequence, itemCode, warehouse, subGroup1, subGroup2, subGroup3, subGroup4, vendor, customer, voucher, transactionCode, journalDate, journalType, quantity, purchasePrice, currencyCode, exchange, costPrice, costAmount, salesAmount, inventOnHand, text, reference, dim1, dim2, dim3, netWeight, unitVolume, numberOfPackages, countedQuantity, jobNumber, vendorPrice, vendorDiscount, fabrication, batch, batchExpiry, typeOf, purchaseAmount, unitCode, inPUnitCode, poBatchId, jobRequestId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DkCloudDataModelProductsTransactionsModel {\n");
    
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    origin: ").append(toIndentedString(origin)).append("\n");
    sb.append("    headId: ").append(toIndentedString(headId)).append("\n");
    sb.append("    sequence: ").append(toIndentedString(sequence)).append("\n");
    sb.append("    itemCode: ").append(toIndentedString(itemCode)).append("\n");
    sb.append("    warehouse: ").append(toIndentedString(warehouse)).append("\n");
    sb.append("    subGroup1: ").append(toIndentedString(subGroup1)).append("\n");
    sb.append("    subGroup2: ").append(toIndentedString(subGroup2)).append("\n");
    sb.append("    subGroup3: ").append(toIndentedString(subGroup3)).append("\n");
    sb.append("    subGroup4: ").append(toIndentedString(subGroup4)).append("\n");
    sb.append("    vendor: ").append(toIndentedString(vendor)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    voucher: ").append(toIndentedString(voucher)).append("\n");
    sb.append("    transactionCode: ").append(toIndentedString(transactionCode)).append("\n");
    sb.append("    journalDate: ").append(toIndentedString(journalDate)).append("\n");
    sb.append("    journalType: ").append(toIndentedString(journalType)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    purchasePrice: ").append(toIndentedString(purchasePrice)).append("\n");
    sb.append("    currencyCode: ").append(toIndentedString(currencyCode)).append("\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("    costPrice: ").append(toIndentedString(costPrice)).append("\n");
    sb.append("    costAmount: ").append(toIndentedString(costAmount)).append("\n");
    sb.append("    salesAmount: ").append(toIndentedString(salesAmount)).append("\n");
    sb.append("    inventOnHand: ").append(toIndentedString(inventOnHand)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
    sb.append("    dim1: ").append(toIndentedString(dim1)).append("\n");
    sb.append("    dim2: ").append(toIndentedString(dim2)).append("\n");
    sb.append("    dim3: ").append(toIndentedString(dim3)).append("\n");
    sb.append("    netWeight: ").append(toIndentedString(netWeight)).append("\n");
    sb.append("    unitVolume: ").append(toIndentedString(unitVolume)).append("\n");
    sb.append("    numberOfPackages: ").append(toIndentedString(numberOfPackages)).append("\n");
    sb.append("    countedQuantity: ").append(toIndentedString(countedQuantity)).append("\n");
    sb.append("    jobNumber: ").append(toIndentedString(jobNumber)).append("\n");
    sb.append("    vendorPrice: ").append(toIndentedString(vendorPrice)).append("\n");
    sb.append("    vendorDiscount: ").append(toIndentedString(vendorDiscount)).append("\n");
    sb.append("    fabrication: ").append(toIndentedString(fabrication)).append("\n");
    sb.append("    batch: ").append(toIndentedString(batch)).append("\n");
    sb.append("    batchExpiry: ").append(toIndentedString(batchExpiry)).append("\n");
    sb.append("    typeOf: ").append(toIndentedString(typeOf)).append("\n");
    sb.append("    purchaseAmount: ").append(toIndentedString(purchaseAmount)).append("\n");
    sb.append("    unitCode: ").append(toIndentedString(unitCode)).append("\n");
    sb.append("    inPUnitCode: ").append(toIndentedString(inPUnitCode)).append("\n");
    sb.append("    poBatchId: ").append(toIndentedString(poBatchId)).append("\n");
    sb.append("    jobRequestId: ").append(toIndentedString(jobRequestId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


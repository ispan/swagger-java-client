/*
 * dkPlus.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * DkCloudDataModelGeneralDim1Model
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-12T12:57:09.866Z")



public class DkCloudDataModelGeneralDim1Model {
  @SerializedName("Number")
  private String number = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Modified")
  private OffsetDateTime modified = null;

  @SerializedName("Created")
  private OffsetDateTime created = null;

  @SerializedName("Closed")
  private Boolean closed = null;

  @SerializedName("SkipVAT")
  private Boolean skipVAT = null;

  @SerializedName("SkipIncomeVAT")
  private Boolean skipIncomeVAT = null;

  @SerializedName("IsInBuildBuisness")
  private Boolean isInBuildBuisness = null;

  @SerializedName("ISAT95")
  private String isAT95 = null;

  @SerializedName("VSKNumber")
  private String vsKNumber = null;

  @SerializedName("SiUser")
  private String siUser = null;

  @SerializedName("DimApproverer")
  private String dimApproverer = null;

  @SerializedName("GLSveitCOFOGCode")
  private String glSveitCOFOGCode = null;

  @SerializedName("DimType")
  private Integer dimType = null;

  public DkCloudDataModelGeneralDim1Model number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @ApiModelProperty(value = "")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public DkCloudDataModelGeneralDim1Model name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DkCloudDataModelGeneralDim1Model modified(OffsetDateTime modified) {
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getModified() {
    return modified;
  }

  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }

  public DkCloudDataModelGeneralDim1Model created(OffsetDateTime created) {
    this.created = created;
    return this;
  }

   /**
   * Get created
   * @return created
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreated() {
    return created;
  }

  public void setCreated(OffsetDateTime created) {
    this.created = created;
  }

  public DkCloudDataModelGeneralDim1Model closed(Boolean closed) {
    this.closed = closed;
    return this;
  }

   /**
   * Get closed
   * @return closed
  **/
  @ApiModelProperty(value = "")
  public Boolean isClosed() {
    return closed;
  }

  public void setClosed(Boolean closed) {
    this.closed = closed;
  }

  public DkCloudDataModelGeneralDim1Model skipVAT(Boolean skipVAT) {
    this.skipVAT = skipVAT;
    return this;
  }

   /**
   * Get skipVAT
   * @return skipVAT
  **/
  @ApiModelProperty(value = "")
  public Boolean isSkipVAT() {
    return skipVAT;
  }

  public void setSkipVAT(Boolean skipVAT) {
    this.skipVAT = skipVAT;
  }

  public DkCloudDataModelGeneralDim1Model skipIncomeVAT(Boolean skipIncomeVAT) {
    this.skipIncomeVAT = skipIncomeVAT;
    return this;
  }

   /**
   * Get skipIncomeVAT
   * @return skipIncomeVAT
  **/
  @ApiModelProperty(value = "")
  public Boolean isSkipIncomeVAT() {
    return skipIncomeVAT;
  }

  public void setSkipIncomeVAT(Boolean skipIncomeVAT) {
    this.skipIncomeVAT = skipIncomeVAT;
  }

  public DkCloudDataModelGeneralDim1Model isInBuildBuisness(Boolean isInBuildBuisness) {
    this.isInBuildBuisness = isInBuildBuisness;
    return this;
  }

   /**
   * Get isInBuildBuisness
   * @return isInBuildBuisness
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsInBuildBuisness() {
    return isInBuildBuisness;
  }

  public void setIsInBuildBuisness(Boolean isInBuildBuisness) {
    this.isInBuildBuisness = isInBuildBuisness;
  }

  public DkCloudDataModelGeneralDim1Model isAT95(String isAT95) {
    this.isAT95 = isAT95;
    return this;
  }

   /**
   * Get isAT95
   * @return isAT95
  **/
  @ApiModelProperty(value = "")
  public String getIsAT95() {
    return isAT95;
  }

  public void setIsAT95(String isAT95) {
    this.isAT95 = isAT95;
  }

  public DkCloudDataModelGeneralDim1Model vsKNumber(String vsKNumber) {
    this.vsKNumber = vsKNumber;
    return this;
  }

   /**
   * Get vsKNumber
   * @return vsKNumber
  **/
  @ApiModelProperty(value = "")
  public String getVsKNumber() {
    return vsKNumber;
  }

  public void setVsKNumber(String vsKNumber) {
    this.vsKNumber = vsKNumber;
  }

  public DkCloudDataModelGeneralDim1Model siUser(String siUser) {
    this.siUser = siUser;
    return this;
  }

   /**
   * Get siUser
   * @return siUser
  **/
  @ApiModelProperty(value = "")
  public String getSiUser() {
    return siUser;
  }

  public void setSiUser(String siUser) {
    this.siUser = siUser;
  }

  public DkCloudDataModelGeneralDim1Model dimApproverer(String dimApproverer) {
    this.dimApproverer = dimApproverer;
    return this;
  }

   /**
   * Get dimApproverer
   * @return dimApproverer
  **/
  @ApiModelProperty(value = "")
  public String getDimApproverer() {
    return dimApproverer;
  }

  public void setDimApproverer(String dimApproverer) {
    this.dimApproverer = dimApproverer;
  }

  public DkCloudDataModelGeneralDim1Model glSveitCOFOGCode(String glSveitCOFOGCode) {
    this.glSveitCOFOGCode = glSveitCOFOGCode;
    return this;
  }

   /**
   * Get glSveitCOFOGCode
   * @return glSveitCOFOGCode
  **/
  @ApiModelProperty(value = "")
  public String getGlSveitCOFOGCode() {
    return glSveitCOFOGCode;
  }

  public void setGlSveitCOFOGCode(String glSveitCOFOGCode) {
    this.glSveitCOFOGCode = glSveitCOFOGCode;
  }

  public DkCloudDataModelGeneralDim1Model dimType(Integer dimType) {
    this.dimType = dimType;
    return this;
  }

   /**
   * Get dimType
   * @return dimType
  **/
  @ApiModelProperty(value = "")
  public Integer getDimType() {
    return dimType;
  }

  public void setDimType(Integer dimType) {
    this.dimType = dimType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DkCloudDataModelGeneralDim1Model dkCloudDataModelGeneralDim1Model = (DkCloudDataModelGeneralDim1Model) o;
    return Objects.equals(this.number, dkCloudDataModelGeneralDim1Model.number) &&
        Objects.equals(this.name, dkCloudDataModelGeneralDim1Model.name) &&
        Objects.equals(this.modified, dkCloudDataModelGeneralDim1Model.modified) &&
        Objects.equals(this.created, dkCloudDataModelGeneralDim1Model.created) &&
        Objects.equals(this.closed, dkCloudDataModelGeneralDim1Model.closed) &&
        Objects.equals(this.skipVAT, dkCloudDataModelGeneralDim1Model.skipVAT) &&
        Objects.equals(this.skipIncomeVAT, dkCloudDataModelGeneralDim1Model.skipIncomeVAT) &&
        Objects.equals(this.isInBuildBuisness, dkCloudDataModelGeneralDim1Model.isInBuildBuisness) &&
        Objects.equals(this.isAT95, dkCloudDataModelGeneralDim1Model.isAT95) &&
        Objects.equals(this.vsKNumber, dkCloudDataModelGeneralDim1Model.vsKNumber) &&
        Objects.equals(this.siUser, dkCloudDataModelGeneralDim1Model.siUser) &&
        Objects.equals(this.dimApproverer, dkCloudDataModelGeneralDim1Model.dimApproverer) &&
        Objects.equals(this.glSveitCOFOGCode, dkCloudDataModelGeneralDim1Model.glSveitCOFOGCode) &&
        Objects.equals(this.dimType, dkCloudDataModelGeneralDim1Model.dimType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, name, modified, created, closed, skipVAT, skipIncomeVAT, isInBuildBuisness, isAT95, vsKNumber, siUser, dimApproverer, glSveitCOFOGCode, dimType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DkCloudDataModelGeneralDim1Model {\n");
    
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    created: ").append(toIndentedString(created)).append("\n");
    sb.append("    closed: ").append(toIndentedString(closed)).append("\n");
    sb.append("    skipVAT: ").append(toIndentedString(skipVAT)).append("\n");
    sb.append("    skipIncomeVAT: ").append(toIndentedString(skipIncomeVAT)).append("\n");
    sb.append("    isInBuildBuisness: ").append(toIndentedString(isInBuildBuisness)).append("\n");
    sb.append("    isAT95: ").append(toIndentedString(isAT95)).append("\n");
    sb.append("    vsKNumber: ").append(toIndentedString(vsKNumber)).append("\n");
    sb.append("    siUser: ").append(toIndentedString(siUser)).append("\n");
    sb.append("    dimApproverer: ").append(toIndentedString(dimApproverer)).append("\n");
    sb.append("    glSveitCOFOGCode: ").append(toIndentedString(glSveitCOFOGCode)).append("\n");
    sb.append("    dimType: ").append(toIndentedString(dimType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


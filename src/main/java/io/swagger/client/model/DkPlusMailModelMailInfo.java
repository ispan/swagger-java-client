/*
 * dkPlus.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * DkPlusMailModelMailInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-12T12:57:09.866Z")



public class DkPlusMailModelMailInfo {
  @SerializedName("DisplayName")
  private String displayName = null;

  @SerializedName("To")
  private String to = null;

  @SerializedName("CC")
  private String CC = null;

  @SerializedName("BCC")
  private String BCC = null;

  @SerializedName("Subject")
  private String subject = null;

  @SerializedName("Body")
  private String body = null;

  /**
   * Gets or Sets priority
   */
  @JsonAdapter(PriorityEnum.Adapter.class)
  public enum PriorityEnum {
    NONE("None"),
    
    HIGHEST("Highest"),
    
    HIGH("High"),
    
    NORMAL("Normal"),
    
    LOW("Low"),
    
    LOWEST("Lowest");

    private String value;

    PriorityEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PriorityEnum fromValue(String text) {
      for (PriorityEnum b : PriorityEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PriorityEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PriorityEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PriorityEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PriorityEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("Priority")
  private PriorityEnum priority = null;

  @SerializedName("Attachments")
  private List<String> attachments = null;

  @SerializedName("HasRecipients")
  private Boolean hasRecipients = null;

  public DkPlusMailModelMailInfo displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * Get displayName
   * @return displayName
  **/
  @ApiModelProperty(value = "")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public DkPlusMailModelMailInfo to(String to) {
    this.to = to;
    return this;
  }

   /**
   * Get to
   * @return to
  **/
  @ApiModelProperty(value = "")
  public String getTo() {
    return to;
  }

  public void setTo(String to) {
    this.to = to;
  }

  public DkPlusMailModelMailInfo CC(String CC) {
    this.CC = CC;
    return this;
  }

   /**
   * Get CC
   * @return CC
  **/
  @ApiModelProperty(value = "")
  public String getCC() {
    return CC;
  }

  public void setCC(String CC) {
    this.CC = CC;
  }

  public DkPlusMailModelMailInfo BCC(String BCC) {
    this.BCC = BCC;
    return this;
  }

   /**
   * Get BCC
   * @return BCC
  **/
  @ApiModelProperty(value = "")
  public String getBCC() {
    return BCC;
  }

  public void setBCC(String BCC) {
    this.BCC = BCC;
  }

  public DkPlusMailModelMailInfo subject(String subject) {
    this.subject = subject;
    return this;
  }

   /**
   * Get subject
   * @return subject
  **/
  @ApiModelProperty(value = "")
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }

  public DkPlusMailModelMailInfo body(String body) {
    this.body = body;
    return this;
  }

   /**
   * Get body
   * @return body
  **/
  @ApiModelProperty(value = "")
  public String getBody() {
    return body;
  }

  public void setBody(String body) {
    this.body = body;
  }

  public DkPlusMailModelMailInfo priority(PriorityEnum priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Get priority
   * @return priority
  **/
  @ApiModelProperty(value = "")
  public PriorityEnum getPriority() {
    return priority;
  }

  public void setPriority(PriorityEnum priority) {
    this.priority = priority;
  }

  public DkPlusMailModelMailInfo attachments(List<String> attachments) {
    this.attachments = attachments;
    return this;
  }

  public DkPlusMailModelMailInfo addAttachmentsItem(String attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<String>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * Get attachments
   * @return attachments
  **/
  @ApiModelProperty(value = "")
  public List<String> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<String> attachments) {
    this.attachments = attachments;
  }

   /**
   * Get hasRecipients
   * @return hasRecipients
  **/
  @ApiModelProperty(value = "")
  public Boolean isHasRecipients() {
    return hasRecipients;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DkPlusMailModelMailInfo dkPlusMailModelMailInfo = (DkPlusMailModelMailInfo) o;
    return Objects.equals(this.displayName, dkPlusMailModelMailInfo.displayName) &&
        Objects.equals(this.to, dkPlusMailModelMailInfo.to) &&
        Objects.equals(this.CC, dkPlusMailModelMailInfo.CC) &&
        Objects.equals(this.BCC, dkPlusMailModelMailInfo.BCC) &&
        Objects.equals(this.subject, dkPlusMailModelMailInfo.subject) &&
        Objects.equals(this.body, dkPlusMailModelMailInfo.body) &&
        Objects.equals(this.priority, dkPlusMailModelMailInfo.priority) &&
        Objects.equals(this.attachments, dkPlusMailModelMailInfo.attachments) &&
        Objects.equals(this.hasRecipients, dkPlusMailModelMailInfo.hasRecipients);
  }

  @Override
  public int hashCode() {
    return Objects.hash(displayName, to, CC, BCC, subject, body, priority, attachments, hasRecipients);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DkPlusMailModelMailInfo {\n");
    
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("    CC: ").append(toIndentedString(CC)).append("\n");
    sb.append("    BCC: ").append(toIndentedString(BCC)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    body: ").append(toIndentedString(body)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    hasRecipients: ").append(toIndentedString(hasRecipients)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


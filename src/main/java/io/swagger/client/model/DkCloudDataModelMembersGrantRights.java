/*
 * dkPlus.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DkCloudDataModelMembersGrantRights
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-12T12:57:09.866Z")



public class DkCloudDataModelMembersGrantRights {
  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    NONE("None"),
    
    AMOUNT("Amount"),
    
    COUNT("Count");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("Type")
  private TypeEnum type = null;

  @SerializedName("AvailableAmount")
  private Double availableAmount = null;

  @SerializedName("AvailableCount")
  private Integer availableCount = null;

  @SerializedName("ConditionFailed")
  private Boolean conditionFailed = null;

  @SerializedName("MaxAmount")
  private Double maxAmount = null;

  @SerializedName("MinAmount")
  private Double minAmount = null;

  @SerializedName("RuleAmount")
  private Double ruleAmount = null;

  @SerializedName("RuleCount")
  private Integer ruleCount = null;

  @SerializedName("TaxPercent")
  private Double taxPercent = null;

  public DkCloudDataModelMembersGrantRights type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

   /**
   * Get availableAmount
   * @return availableAmount
  **/
  @ApiModelProperty(value = "")
  public Double getAvailableAmount() {
    return availableAmount;
  }

   /**
   * Get availableCount
   * @return availableCount
  **/
  @ApiModelProperty(value = "")
  public Integer getAvailableCount() {
    return availableCount;
  }

   /**
   * Get conditionFailed
   * @return conditionFailed
  **/
  @ApiModelProperty(value = "")
  public Boolean isConditionFailed() {
    return conditionFailed;
  }

   /**
   * Get maxAmount
   * @return maxAmount
  **/
  @ApiModelProperty(value = "")
  public Double getMaxAmount() {
    return maxAmount;
  }

   /**
   * Get minAmount
   * @return minAmount
  **/
  @ApiModelProperty(value = "")
  public Double getMinAmount() {
    return minAmount;
  }

   /**
   * Get ruleAmount
   * @return ruleAmount
  **/
  @ApiModelProperty(value = "")
  public Double getRuleAmount() {
    return ruleAmount;
  }

   /**
   * Get ruleCount
   * @return ruleCount
  **/
  @ApiModelProperty(value = "")
  public Integer getRuleCount() {
    return ruleCount;
  }

   /**
   * Get taxPercent
   * @return taxPercent
  **/
  @ApiModelProperty(value = "")
  public Double getTaxPercent() {
    return taxPercent;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DkCloudDataModelMembersGrantRights dkCloudDataModelMembersGrantRights = (DkCloudDataModelMembersGrantRights) o;
    return Objects.equals(this.type, dkCloudDataModelMembersGrantRights.type) &&
        Objects.equals(this.availableAmount, dkCloudDataModelMembersGrantRights.availableAmount) &&
        Objects.equals(this.availableCount, dkCloudDataModelMembersGrantRights.availableCount) &&
        Objects.equals(this.conditionFailed, dkCloudDataModelMembersGrantRights.conditionFailed) &&
        Objects.equals(this.maxAmount, dkCloudDataModelMembersGrantRights.maxAmount) &&
        Objects.equals(this.minAmount, dkCloudDataModelMembersGrantRights.minAmount) &&
        Objects.equals(this.ruleAmount, dkCloudDataModelMembersGrantRights.ruleAmount) &&
        Objects.equals(this.ruleCount, dkCloudDataModelMembersGrantRights.ruleCount) &&
        Objects.equals(this.taxPercent, dkCloudDataModelMembersGrantRights.taxPercent);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, availableAmount, availableCount, conditionFailed, maxAmount, minAmount, ruleAmount, ruleCount, taxPercent);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DkCloudDataModelMembersGrantRights {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    availableAmount: ").append(toIndentedString(availableAmount)).append("\n");
    sb.append("    availableCount: ").append(toIndentedString(availableCount)).append("\n");
    sb.append("    conditionFailed: ").append(toIndentedString(conditionFailed)).append("\n");
    sb.append("    maxAmount: ").append(toIndentedString(maxAmount)).append("\n");
    sb.append("    minAmount: ").append(toIndentedString(minAmount)).append("\n");
    sb.append("    ruleAmount: ").append(toIndentedString(ruleAmount)).append("\n");
    sb.append("    ruleCount: ").append(toIndentedString(ruleCount)).append("\n");
    sb.append("    taxPercent: ").append(toIndentedString(taxPercent)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


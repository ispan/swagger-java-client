/*
 * dkPlus.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.threeten.bp.OffsetDateTime;

/**
 * DkCloudDataModelProjectPhaseModel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-12T12:57:09.866Z")



public class DkCloudDataModelProjectPhaseModel {
  @SerializedName("Number")
  private String number = null;

  @SerializedName("Name")
  private String name = null;

  @SerializedName("Modified")
  private OffsetDateTime modified = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    WORK("Work"),
    
    ILLNESS("Illness"),
    
    HOLIDAY("Holiday"),
    
    PRICEVAR("PriceVar"),
    
    CHILDILLNESS("ChildIllness"),
    
    LEAVENOPAY("LeaveNoPay"),
    
    LEAVEPAID("LeavePaid");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("Type")
  private TypeEnum type = null;

  @SerializedName("Enabled")
  private Boolean enabled = null;

  @SerializedName("Dim1Required")
  private Boolean dim1Required = null;

  @SerializedName("Dim2Required")
  private Boolean dim2Required = null;

  @SerializedName("Dim3Required")
  private Boolean dim3Required = null;

  @SerializedName("ExtraProperties")
  private Map<String, String> extraProperties = null;

  public DkCloudDataModelProjectPhaseModel number(String number) {
    this.number = number;
    return this;
  }

   /**
   * Get number
   * @return number
  **/
  @ApiModelProperty(value = "")
  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public DkCloudDataModelProjectPhaseModel name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DkCloudDataModelProjectPhaseModel modified(OffsetDateTime modified) {
    this.modified = modified;
    return this;
  }

   /**
   * Get modified
   * @return modified
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getModified() {
    return modified;
  }

  public void setModified(OffsetDateTime modified) {
    this.modified = modified;
  }

  public DkCloudDataModelProjectPhaseModel type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public DkCloudDataModelProjectPhaseModel enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

   /**
   * Get enabled
   * @return enabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }

  public DkCloudDataModelProjectPhaseModel dim1Required(Boolean dim1Required) {
    this.dim1Required = dim1Required;
    return this;
  }

   /**
   * Get dim1Required
   * @return dim1Required
  **/
  @ApiModelProperty(value = "")
  public Boolean isDim1Required() {
    return dim1Required;
  }

  public void setDim1Required(Boolean dim1Required) {
    this.dim1Required = dim1Required;
  }

  public DkCloudDataModelProjectPhaseModel dim2Required(Boolean dim2Required) {
    this.dim2Required = dim2Required;
    return this;
  }

   /**
   * Get dim2Required
   * @return dim2Required
  **/
  @ApiModelProperty(value = "")
  public Boolean isDim2Required() {
    return dim2Required;
  }

  public void setDim2Required(Boolean dim2Required) {
    this.dim2Required = dim2Required;
  }

  public DkCloudDataModelProjectPhaseModel dim3Required(Boolean dim3Required) {
    this.dim3Required = dim3Required;
    return this;
  }

   /**
   * Get dim3Required
   * @return dim3Required
  **/
  @ApiModelProperty(value = "")
  public Boolean isDim3Required() {
    return dim3Required;
  }

  public void setDim3Required(Boolean dim3Required) {
    this.dim3Required = dim3Required;
  }

  public DkCloudDataModelProjectPhaseModel extraProperties(Map<String, String> extraProperties) {
    this.extraProperties = extraProperties;
    return this;
  }

  public DkCloudDataModelProjectPhaseModel putExtraPropertiesItem(String key, String extraPropertiesItem) {
    if (this.extraProperties == null) {
      this.extraProperties = new HashMap<String, String>();
    }
    this.extraProperties.put(key, extraPropertiesItem);
    return this;
  }

   /**
   * Get extraProperties
   * @return extraProperties
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getExtraProperties() {
    return extraProperties;
  }

  public void setExtraProperties(Map<String, String> extraProperties) {
    this.extraProperties = extraProperties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DkCloudDataModelProjectPhaseModel dkCloudDataModelProjectPhaseModel = (DkCloudDataModelProjectPhaseModel) o;
    return Objects.equals(this.number, dkCloudDataModelProjectPhaseModel.number) &&
        Objects.equals(this.name, dkCloudDataModelProjectPhaseModel.name) &&
        Objects.equals(this.modified, dkCloudDataModelProjectPhaseModel.modified) &&
        Objects.equals(this.type, dkCloudDataModelProjectPhaseModel.type) &&
        Objects.equals(this.enabled, dkCloudDataModelProjectPhaseModel.enabled) &&
        Objects.equals(this.dim1Required, dkCloudDataModelProjectPhaseModel.dim1Required) &&
        Objects.equals(this.dim2Required, dkCloudDataModelProjectPhaseModel.dim2Required) &&
        Objects.equals(this.dim3Required, dkCloudDataModelProjectPhaseModel.dim3Required) &&
        Objects.equals(this.extraProperties, dkCloudDataModelProjectPhaseModel.extraProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, name, modified, type, enabled, dim1Required, dim2Required, dim3Required, extraProperties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DkCloudDataModelProjectPhaseModel {\n");
    
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    modified: ").append(toIndentedString(modified)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    dim1Required: ").append(toIndentedString(dim1Required)).append("\n");
    sb.append("    dim2Required: ").append(toIndentedString(dim2Required)).append("\n");
    sb.append("    dim3Required: ").append(toIndentedString(dim3Required)).append("\n");
    sb.append("    extraProperties: ").append(toIndentedString(extraProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


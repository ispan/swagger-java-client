/*
 * dkPlus.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * DkCloudDataModelVendorsVendorExpenses
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-12T12:57:09.866Z")



public class DkCloudDataModelVendorsVendorExpenses {
  @SerializedName("Account")
  private String account = null;

  @SerializedName("Dim1")
  private String dim1 = null;

  @SerializedName("Dim2")
  private String dim2 = null;

  @SerializedName("AccountVAT2")
  private String accountVAT2 = null;

  @SerializedName("AccountVAT3")
  private String accountVAT3 = null;

  public DkCloudDataModelVendorsVendorExpenses account(String account) {
    this.account = account;
    return this;
  }

   /**
   * Get account
   * @return account
  **/
  @ApiModelProperty(value = "")
  public String getAccount() {
    return account;
  }

  public void setAccount(String account) {
    this.account = account;
  }

  public DkCloudDataModelVendorsVendorExpenses dim1(String dim1) {
    this.dim1 = dim1;
    return this;
  }

   /**
   * Get dim1
   * @return dim1
  **/
  @ApiModelProperty(value = "")
  public String getDim1() {
    return dim1;
  }

  public void setDim1(String dim1) {
    this.dim1 = dim1;
  }

  public DkCloudDataModelVendorsVendorExpenses dim2(String dim2) {
    this.dim2 = dim2;
    return this;
  }

   /**
   * Get dim2
   * @return dim2
  **/
  @ApiModelProperty(value = "")
  public String getDim2() {
    return dim2;
  }

  public void setDim2(String dim2) {
    this.dim2 = dim2;
  }

  public DkCloudDataModelVendorsVendorExpenses accountVAT2(String accountVAT2) {
    this.accountVAT2 = accountVAT2;
    return this;
  }

   /**
   * Get accountVAT2
   * @return accountVAT2
  **/
  @ApiModelProperty(value = "")
  public String getAccountVAT2() {
    return accountVAT2;
  }

  public void setAccountVAT2(String accountVAT2) {
    this.accountVAT2 = accountVAT2;
  }

  public DkCloudDataModelVendorsVendorExpenses accountVAT3(String accountVAT3) {
    this.accountVAT3 = accountVAT3;
    return this;
  }

   /**
   * Get accountVAT3
   * @return accountVAT3
  **/
  @ApiModelProperty(value = "")
  public String getAccountVAT3() {
    return accountVAT3;
  }

  public void setAccountVAT3(String accountVAT3) {
    this.accountVAT3 = accountVAT3;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DkCloudDataModelVendorsVendorExpenses dkCloudDataModelVendorsVendorExpenses = (DkCloudDataModelVendorsVendorExpenses) o;
    return Objects.equals(this.account, dkCloudDataModelVendorsVendorExpenses.account) &&
        Objects.equals(this.dim1, dkCloudDataModelVendorsVendorExpenses.dim1) &&
        Objects.equals(this.dim2, dkCloudDataModelVendorsVendorExpenses.dim2) &&
        Objects.equals(this.accountVAT2, dkCloudDataModelVendorsVendorExpenses.accountVAT2) &&
        Objects.equals(this.accountVAT3, dkCloudDataModelVendorsVendorExpenses.accountVAT3);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, dim1, dim2, accountVAT2, accountVAT3);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DkCloudDataModelVendorsVendorExpenses {\n");
    
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    dim1: ").append(toIndentedString(dim1)).append("\n");
    sb.append("    dim2: ").append(toIndentedString(dim2)).append("\n");
    sb.append("    accountVAT2: ").append(toIndentedString(accountVAT2)).append("\n");
    sb.append("    accountVAT3: ").append(toIndentedString(accountVAT3)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


/*
 * dkPlus.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.DkPlusAPIModelsGeneralLedgerLine;
import io.swagger.client.model.DkPlusAPIModelsGeneralLedgerOptions;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * DkPlusAPIModelsGeneralLedgerHead
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-11-12T12:57:09.866Z")



public class DkPlusAPIModelsGeneralLedgerHead {
  @SerializedName("Code")
  private String code = null;

  @SerializedName("Description")
  private String description = null;

  @SerializedName("Period")
  private Integer period = null;

  @SerializedName("Option")
  private DkPlusAPIModelsGeneralLedgerOptions option = null;

  @SerializedName("Lines")
  private List<DkPlusAPIModelsGeneralLedgerLine> lines = new ArrayList<DkPlusAPIModelsGeneralLedgerLine>();

  @SerializedName("Properties")
  private Map<String, String> properties = null;

  public DkPlusAPIModelsGeneralLedgerHead code(String code) {
    this.code = code;
    return this;
  }

   /**
   * Get code
   * @return code
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public DkPlusAPIModelsGeneralLedgerHead description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public DkPlusAPIModelsGeneralLedgerHead period(Integer period) {
    this.period = period;
    return this;
  }

   /**
   * Get period
   * @return period
  **/
  @ApiModelProperty(value = "")
  public Integer getPeriod() {
    return period;
  }

  public void setPeriod(Integer period) {
    this.period = period;
  }

  public DkPlusAPIModelsGeneralLedgerHead option(DkPlusAPIModelsGeneralLedgerOptions option) {
    this.option = option;
    return this;
  }

   /**
   * Get option
   * @return option
  **/
  @ApiModelProperty(value = "")
  public DkPlusAPIModelsGeneralLedgerOptions getOption() {
    return option;
  }

  public void setOption(DkPlusAPIModelsGeneralLedgerOptions option) {
    this.option = option;
  }

  public DkPlusAPIModelsGeneralLedgerHead lines(List<DkPlusAPIModelsGeneralLedgerLine> lines) {
    this.lines = lines;
    return this;
  }

  public DkPlusAPIModelsGeneralLedgerHead addLinesItem(DkPlusAPIModelsGeneralLedgerLine linesItem) {
    this.lines.add(linesItem);
    return this;
  }

   /**
   * Get lines
   * @return lines
  **/
  @ApiModelProperty(required = true, value = "")
  public List<DkPlusAPIModelsGeneralLedgerLine> getLines() {
    return lines;
  }

  public void setLines(List<DkPlusAPIModelsGeneralLedgerLine> lines) {
    this.lines = lines;
  }

  public DkPlusAPIModelsGeneralLedgerHead properties(Map<String, String> properties) {
    this.properties = properties;
    return this;
  }

  public DkPlusAPIModelsGeneralLedgerHead putPropertiesItem(String key, String propertiesItem) {
    if (this.properties == null) {
      this.properties = new HashMap<String, String>();
    }
    this.properties.put(key, propertiesItem);
    return this;
  }

   /**
   * Get properties
   * @return properties
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getProperties() {
    return properties;
  }

  public void setProperties(Map<String, String> properties) {
    this.properties = properties;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DkPlusAPIModelsGeneralLedgerHead dkPlusAPIModelsGeneralLedgerHead = (DkPlusAPIModelsGeneralLedgerHead) o;
    return Objects.equals(this.code, dkPlusAPIModelsGeneralLedgerHead.code) &&
        Objects.equals(this.description, dkPlusAPIModelsGeneralLedgerHead.description) &&
        Objects.equals(this.period, dkPlusAPIModelsGeneralLedgerHead.period) &&
        Objects.equals(this.option, dkPlusAPIModelsGeneralLedgerHead.option) &&
        Objects.equals(this.lines, dkPlusAPIModelsGeneralLedgerHead.lines) &&
        Objects.equals(this.properties, dkPlusAPIModelsGeneralLedgerHead.properties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, description, period, option, lines, properties);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DkPlusAPIModelsGeneralLedgerHead {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    period: ").append(toIndentedString(period)).append("\n");
    sb.append("    option: ").append(toIndentedString(option)).append("\n");
    sb.append("    lines: ").append(toIndentedString(lines)).append("\n");
    sb.append("    properties: ").append(toIndentedString(properties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}


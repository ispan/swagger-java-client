/*
 * dkPlus.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DkCloudDataModelVendorsTransaction;
import io.swagger.client.model.DkCloudDataModelVendorsVendorModel;
import org.threeten.bp.OffsetDateTime;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VendorApi
 */
@Ignore
public class VendorApiTest {

    private final VendorApi api = new VendorApi();

    
    /**
     * Get Vendor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorGetByIDTest() throws ApiException {
        String id = null;
        DkCloudDataModelVendorsVendorModel response = api.vendorGetByID(id);

        // TODO: test validations
    }
    
    /**
     * Get All Vendors
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorGetVendorsTest() throws ApiException {
        String zipCode = null;
        OffsetDateTime modifiedAfter = null;
        OffsetDateTime modifiedBefore = null;
        String group = null;
        List<DkCloudDataModelVendorsVendorModel> response = api.vendorGetVendors(zipCode, modifiedAfter, modifiedBefore, group);

        // TODO: test validations
    }
    
    /**
     * Get Vendors Pages
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorGetVendorsPageTest() throws ApiException {
        Integer page = null;
        Integer count = null;
        List<DkCloudDataModelVendorsVendorModel> response = api.vendorGetVendorsPage(page, count);

        // TODO: test validations
    }
    
    /**
     * Create Vendor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorPostTest() throws ApiException {
        DkCloudDataModelVendorsVendorModel obj = null;
        api.vendorPost(obj);

        // TODO: test validations
    }
    
    /**
     * Search Vendors
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorSearchVendorsTest() throws ApiException {
        String value = null;
        Integer max = null;
        List<DkCloudDataModelVendorsVendorModel> response = api.vendorSearchVendors(value, max);

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorTransactionGetVendorTransactionsTest() throws ApiException {
        Integer page = null;
        Integer count = null;
        OffsetDateTime modifiedAfter = null;
        OffsetDateTime createdAfter = null;
        OffsetDateTime createdBefore = null;
        OffsetDateTime dueAfter = null;
        String dim1 = null;
        String voucher = null;
        String reference = null;
        Integer recordid = null;
        List<DkCloudDataModelVendorsTransaction> response = api.vendorTransactionGetVendorTransactions(page, count, modifiedAfter, createdAfter, createdBefore, dueAfter, dim1, voucher, reference, recordid);

        // TODO: test validations
    }
    
    /**
     * Get Transactions for supplied Vendor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorTransactionGetVendorTransactionsForVendorTest() throws ApiException {
        String vendor = null;
        Integer page = null;
        Integer count = null;
        List<DkCloudDataModelVendorsTransaction> response = api.vendorTransactionGetVendorTransactionsForVendor(vendor, page, count);

        // TODO: test validations
    }
    
    /**
     * Update Vendor
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void vendorUpdateVendorTest() throws ApiException {
        String number = null;
        DkCloudDataModelVendorsVendorModel obj = null;
        api.vendorUpdateVendor(number, obj);

        // TODO: test validations
    }
    
}

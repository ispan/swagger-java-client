/*
 * dkPlus.API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DkPlusAPIModelsRecordDeletedInfo;
import io.swagger.client.model.DkPlusAPIModelsTableChangeResponse;
import org.threeten.bp.OffsetDateTime;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TableApi
 */
@Ignore
public class TableApiTest {

    private final TableApi api = new TableApi();

    
    /**
     * Create Record In Table
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tableCreateRecordTest() throws ApiException {
        String name = null;
        Object values = null;
        api.tableCreateRecord(name, values);

        // TODO: test validations
    }
    
    /**
     * This action deletes a record WARNING: Action performed at own risk.
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tableDeleteRecordTest() throws ApiException {
        String name = null;
        String value = null;
        String key = null;
        String response = api.tableDeleteRecord(name, value, key);

        // TODO: test validations
    }
    
    /**
     * Get Deleted Records from Table
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tableGetDeletedTest() throws ApiException {
        String name = null;
        OffsetDateTime from = null;
        List<DkPlusAPIModelsRecordDeletedInfo> response = api.tableGetDeleted(name, from);

        // TODO: test validations
    }
    
    /**
     * Record Change Count from Table
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tableGetRecordChangeCountTest() throws ApiException {
        String name = null;
        OffsetDateTime modified = null;
        DkPlusAPIModelsTableChangeResponse response = api.tableGetRecordChangeCount(name, modified);

        // TODO: test validations
    }
    
    /**
     * Get Records from a table
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tableGetRecordsFromTableTest() throws ApiException {
        String name = null;
        String output = null;
        OffsetDateTime modified = null;
        String fields = null;
        Integer count = null;
        String key = null;
        String value = null;
        String response = api.tableGetRecordsFromTable(name, output, modified, fields, count, key, value);

        // TODO: test validations
    }
    
    /**
     * Return List of Table Fields
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tableGetTableFieldsTest() throws ApiException {
        String name = null;
        List<String> response = api.tableGetTableFields(name);

        // TODO: test validations
    }
    
    /**
     * Update Record In DK
     *
     * ## Set Values    Warning: you need to make sure 100% what you are doing
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void tableUpdateRecordTest() throws ApiException {
        Object values = null;
        String name = null;
        String key = null;
        api.tableUpdateRecord(values, name, key);

        // TODO: test validations
    }
    
}
